
/private/var/folders/3h/f1rm8vzs1lv5ljhwy05p7nfhf1r72j/T/arduino/sketches/64EF741A8E74C5DF9B6FEB97D70BCF95/soundpauli_ni404.ino.elf:     file format elf32-littlearm

SYMBOL TABLE:
60000000 l    d  .text.headers	00000000 .text.headers
60001400 l    d  .text.code	00000000 .text.code
60002174 l    d  .text.progmem	00000000 .text.progmem
00000000 l    d  .text.itcm	00000000 .text.itcm
00027cb0 l    d  .fini	00000000 .fini
00027cb4 l    d  .ARM.exidx	00000000 .ARM.exidx
20000000 l    d  .data	00000000 .data
200042c0 l    d  .bss	00000000 .bss
20200000 l    d  .bss.dma	00000000 .bss.dma
70000000 l    d  .bss.extram	00000000 .bss.extram
6002f840 l    d  .text.csf	00000000 .text.csf
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_loclists	00000000 .debug_loclists
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_rnglists	00000000 .debug_rnglists
00000000 l    d  .debug_line_str	00000000 .debug_line_str
00000000 l    df *ABS*	00000000 bootdata.c
00000000 l    df *ABS*	00000000 startup.c
60001400 l     F .text.code	00000016 memory_copy
60001418 l     F .text.code	00000010 memory_clear
60001428 l     F .text.code	000001fc ResetHandler2
00000000 l    df *ABS*	00000000 imxrt_hw.cpp
00000000 l    df *ABS*	00000000 WireIMXRT.cpp
00014d78 l     F .text.itcm	00000044 _GLOBAL__sub_I__ZN7TwoWire5beginEv
00000000 l    df *ABS*	00000000 AudioStream.cpp
00000000 l    df *ABS*	00000000 tempmon.c
2000b9f8 l     O .bss	00000004 s_hotCount
2000b9fc l     O .bss	00000004 s_hotTemp
2000ba00 l     O .bss	00000004 s_hot_ROOM
2000ba04 l     O .bss	00000004 s_roomC_hotC
00000000 l    df *ABS*	00000000 usb.c
00016e6c l     F .text.itcm	00000088 schedule_transfer
00016ef4 l     F .text.itcm	00000036 run_callbacks
00016f2c l     F .text.itcm	00000098 endpoint0_transmit.constprop.0
2000685c l     O .bss	00000008 endpoint0_buffer
20006864 l     O .bss	00000004 endpoint0_notify_mask
200045e0 l     O .bss	00000008 endpoint0_setupdata
20006868 l     O .bss	00000004 endpointN_notify_mask
2000b99c l     O .bss	00000008 reply_buffer
2000c95b l     O .bss	00000001 sof_usage
2000c96a l     O .bss	00000001 usb_reboot_timer
00000000 l    df *ABS*	00000000 analog.c
2000c94f l     O .bss	00000001 calibrating
00000000 l    df *ABS*	00000000 crti.o
00000000 l    df *ABS*	00000000 crtn.o
00000000 l    df *ABS*	00000000 crtstuff.c
000000dc l     F .text.itcm	00000000 register_tm_clones
00000100 l     F .text.itcm	00000000 frame_dummy
2000b640 l     O .bss	00000000 object.0
600020f0 l     O .text.code	00000000 __frame_dummy_init_array_entry
00000000 l    df *ABS*	00000000 soundpauli_ni404.ino.cpp
00000328 l     F .text.itcm	0000001c __tcf_0
00000a24 l     F .text.itcm	00000048 __tcf_1
00001004 l     F .text.itcm	0000016c switchMode(Mode*) [clone .part.0]
20200000 l     O .bss.dma	00001040 setup::data
00009ad4 l     F .text.itcm	00000b9c _GLOBAL__sub_I_usedFiles
20004f80 l     O .bss	0000002d col_Folder
20004fc4 l     O .bss	0000002d col
60002174 l     O .text.progmem	00000180 noSD
600022f4 l     O .text.progmem	00000780 number
60002a74 l     O .text.progmem	00000240 logo
60002cb4 l     O .text.progmem	00000090 icon_samplepack
60002d44 l     O .text.progmem	00000098 icon_sample
60002ddc l     O .text.progmem	000000a0 icon_loadsave
60002e7c l     O .text.progmem	00000130 icon_bpm
20000d58 l     O .data	00000038 voices
20000e64 l     O .data	0000003c envelopes
00000000 l    df *ABS*	00000000 FastLED.cpp
0000aff4 l     F .text.itcm	00000018 _GLOBAL__sub_I_pSmartMatrix
20005020 l     O .bss	00000004 lastshow
20005304 l     O .bss	00000004 CFastLED::countFPS(int)::br
20005308 l     O .bss	00000004 CFastLED::countFPS(int)::lastframe
00000000 l    df *ABS*	00000000 SPI.cpp
0000b024 l     F .text.itcm	00000060 SPIClass::transfer(void const*, void*, unsigned int) [clone .part.0]
0000b4ec l     F .text.itcm	00000048 _GLOBAL__sub_I__ZN8SPIClass5beginEv
00000000 l    df *ABS*	00000000 async_input_spdif3.cpp
0000b540 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN21AsyncAudioInputSPDIF310microsLastE
00000000 l    df *ABS*	00000000 input_adc.cpp
0000bd00 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputAnalog3dmaE
00000000 l    df *ABS*	00000000 input_i2s.cpp
0000bd18 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputI2S10block_leftE
00000000 l    df *ABS*	00000000 input_i2s2.cpp
0000bd30 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputI2S210block_leftE
00000000 l    df *ABS*	00000000 input_i2s_hex.cpp
0000bd48 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SHex9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_oct.cpp
0000bd60 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputI2SOct9block_ch1E
00000000 l    df *ABS*	00000000 input_i2s_quad.cpp
0000bd78 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioInputI2SQuad9block_ch1E
00000000 l    df *ABS*	00000000 input_pdm.cpp
0000bd90 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputPDM10block_leftE
00000000 l    df *ABS*	00000000 input_pdm_i2s2.cpp
0000bda8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputPDM210block_leftE
00000000 l    df *ABS*	00000000 input_spdif3.cpp
0000bdc0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioInputSPDIF310block_leftE
00000000 l    df *ABS*	00000000 input_tdm.cpp
0000bdd8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN13AudioInputTDM14block_incomingE
00000000 l    df *ABS*	00000000 input_tdm2.cpp
0000bdf0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioInputTDM214block_incomingE
00000000 l    df *ABS*	00000000 output_i2s.cpp
0000c39c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputI2S14block_left_1stE
20201040 l     O .bss.dma	00000200 i2s_tx_buffer
00000000 l    df *ABS*	00000000 output_i2s2.cpp
0000c3b4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputI2S214block_left_1stE
00000000 l    df *ABS*	00000000 output_i2s_hex.cpp
0000c3cc l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SHex13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_oct.cpp
0000c3e4 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputI2SOct13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_i2s_quad.cpp
0000c3fc l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN18AudioOutputI2SQuad13block_ch1_1stE
00000000 l    df *ABS*	00000000 output_mqs.cpp
0000c414 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputMQS14block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211.cpp
0000c42c l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputPT821114block_left_1stE
00000000 l    df *ABS*	00000000 output_pt8211_2.cpp
0000c444 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN19AudioOutputPT8211_214block_left_1stE
00000000 l    df *ABS*	00000000 output_pwm.cpp
0000c45c l     F .text.itcm	0000001c __tcf_0
0000c478 l     F .text.itcm	00000030 _GLOBAL__sub_I__ZN14AudioOutputPWM21update_responsibilityE
00000000 l    df *ABS*	00000000 output_spdif.cpp
0000c4a8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN16AudioOutputSPDIF14block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif2.cpp
0000c4c0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF214block_left_1stE
00000000 l    df *ABS*	00000000 output_spdif3.cpp
0000c4d8 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN17AudioOutputSPDIF314block_left_1stE
00000000 l    df *ABS*	00000000 output_tdm.cpp
0000c4f0 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN14AudioOutputTDM11block_inputE
00000000 l    df *ABS*	00000000 output_tdm2.cpp
0000c508 l     F .text.itcm	00000018 _GLOBAL__sub_I__ZN15AudioOutputTDM211block_inputE
00000000 l    df *ABS*	00000000 SD.cpp
0000d290 l     F .text.itcm	00000080 _GLOBAL__sub_I_SD
00000000 l    df *ABS*	00000000 eh_alloc.o
00018c74 l     F .text.itcm	00000088 (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00018cfc l     F .text.itcm	00000058 (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00018da4 l     F .text.itcm	00000028 _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00000000 l    df *ABS*	00000000 EventResponder.cpp
00000000 l    df *ABS*	00000000 usb_desc.c
200038cc l     O .data	00000012 device_descriptor
600035cc l     O .text.progmem	0000000a qualifier_descriptor
00000000 l    df *ABS*	00000000 interrupt.c
00016490 l     F .text.itcm	00000002 dummy_isr
20000824 l     O .data	00000014 CSWTCH.6
00000000 l    df *ABS*	00000000 Mapf.cpp
00000000 l    df *ABS*	00000000 WS2812Serial.cpp
00000000 l    df *ABS*	00000000 control_sgtl5000.cpp
0000b640 l     F .text.itcm	00000184 AudioControlSGTL5000::enable(unsigned int, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 effect_delay_ext.cpp
00000000 l    df *ABS*	00000000 effect_envelope.cpp
00000000 l    df *ABS*	00000000 memcpy_audio.S.o
0000be10 l       .text.itcm	00000000 .loopLR
0000be54 l       .text.itcm	00000000 .loopL
0000be94 l       .text.itcm	00000000 .loopR
0000bed0 l       .text.itcm	00000000 .loopQuad
00000000 l    df *ABS*	00000000 mixer.cpp
00000000 l    df *ABS*	00000000 output_dac.cpp
00000000 l    df *ABS*	00000000 synth_waveform.cpp
00000000 l    df *ABS*	00000000 ExFatFile.cpp
00000000 l    df *ABS*	00000000 ExFatFileWrite.cpp
00000000 l    df *ABS*	00000000 ExFatFormatter.cpp
0000e690 l     F .text.itcm	00000020 Print::write(char const*) [clone .isra.0]
00000000 l    df *ABS*	00000000 ExFatName.cpp
00000000 l    df *ABS*	00000000 ExFatPartition.cpp
00000000 l    df *ABS*	00000000 FatFile.cpp
0000f3e8 l     F .text.itcm	000000b4 FatFile::sync() [clone .part.0]
00000000 l    df *ABS*	00000000 FatFileLFN.cpp
00000000 l    df *ABS*	00000000 FatFormatter.cpp
00010cd0 l     F .text.itcm	00000030 initFatDirCallback(unsigned long, void*)
00000000 l    df *ABS*	00000000 FatName.cpp
00000000 l    df *ABS*	00000000 FatPartition.cpp
000114e8 l     F .text.itcm	000000fa FatPartition::fatGet(unsigned long, unsigned long*) [clone .part.0]
000115e4 l     F .text.itcm	0000010c FatPartition::fatPut(unsigned long, unsigned long) [clone .part.0]
00000000 l    df *ABS*	00000000 FsFile.cpp
00000000 l    df *ABS*	00000000 FsNew.cpp
00000000 l    df *ABS*	00000000 FsVolume.cpp
00000000 l    df *ABS*	00000000 SdSpiCard.cpp
00000000 l    df *ABS*	00000000 SdioTeensy.cpp
00012b90 l     F .text.itcm	00000030 sdIrs()
00012bc0 l     F .text.itcm	00000014 isBusyDat()
00012bd4 l     F .text.itcm	0000000c isBusyDMA()
00012be0 l     F .text.itcm	000000cc setSdclk(unsigned long)
00012db4 l     F .text.itcm	00000088 waitTransferComplete() [clone .part.0]
00012ef0 l     F .text.itcm	00000098 cardCommand(unsigned long, unsigned long)
00012f88 l     F .text.itcm	00000060 readReg16(unsigned long, void*)
00013084 l     F .text.itcm	0000002c isBusyCMD13()
0001323c l     F .text.itcm	0000011c cardCMD6(unsigned long, unsigned char*)
00013454 l     F .text.itcm	0000015c rdWrSectors(unsigned long, unsigned long, unsigned char*, unsigned int)
2000c942 l     O .bss	00000001 m_initDone
20004fbc l     O .bss	00000004 m_sdClkKhz
2000c943 l     O .bss	00000001 m_version2
20004fc0 l     O .bss	00000004 m_errorLine
2000c944 l     O .bss	00000001 m_highCapacity
2000c945 l     O .bss	00000001 m_transferActive
20004ff8 l     O .bss	00000010 m_cid
20005008 l     O .bss	00000010 m_csd
20005018 l     O .bss	00000004 m_ocr
2000501c l     O .bss	00000004 m_rca
20005024 l     O .bss	00000004 m_busyFcn
2000c946 l     O .bss	00000001 m_dmaBusy
20005028 l     O .bss	00000004 m_irqstat
20003d30 l     O .data	00000001 m_errorCode
00000000 l    df *ABS*	00000000 SdSpiChipSelect.cpp
00000000 l    df *ABS*	00000000 SdSpiTeensy3.cpp
00000000 l    df *ABS*	00000000 FsCache.cpp
00000000 l    df *ABS*	00000000 FsDateTime.cpp
00014124 l     F .text.itcm	00000014 dateTimeMs10(unsigned short*, unsigned short*, unsigned char*)
00000000 l    df *ABS*	00000000 FsName.cpp
00000000 l    df *ABS*	00000000 FsStructs.cpp
00000000 l    df *ABS*	00000000 FsUtf.cpp
00000000 l    df *ABS*	00000000 upcase.cpp
20000c2c l     O .data	0000012c lookupTable
20000d90 l     O .data	000000d4 mapTable
00000000 l    df *ABS*	00000000 avdweb_Switch.cpp
00000000 l    df *ABS*	00000000 interpolation.cpp
00000000 l    df *ABS*	00000000 DMAChannel.cpp
00000000 l    df *ABS*	00000000 IntervalTimer.cpp
000153b8 l     F .text.itcm	00000058 pit_isr()
200042c0 l     O .bss	00000010 funct_table
00000000 l    df *ABS*	00000000 Print.cpp
00015540 l     F .text.itcm	0000007e Print::printNumber(unsigned long, unsigned char, unsigned char) [clone .part.0]
00000000 l    df *ABS*	00000000 Time.cpp
20000ea0 l     O .data	0000000c monthDays
00000000 l    df *ABS*	00000000 WMath.cpp
20004ff4 l     O .bss	00000004 seed
00000000 l    df *ABS*	00000000 WString.cpp
00000000 l    df *ABS*	00000000 clockspeed.c
00000000 l    df *ABS*	00000000 delay.c
00000000 l    df *ABS*	00000000 digital.c
00000000 l    df *ABS*	00000000 eeprom.c
00016078 l     F .text.itcm	0000005c flash_wait
2000c952 l     O .bss	00000001 initialized
2000ba14 l     O .bss	0000007e sector_index
00000000 l    df *ABS*	00000000 main.cpp
00000000 l    df *ABS*	00000000 memcpy-armv7m.S.o
00000000 l    df *ABS*	00000000 new.cpp
00000000 l    df *ABS*	00000000 nonstd.c
00000000 l    df *ABS*	00000000 pwm.c
00000000 l    df *ABS*	00000000 rtc.c
00000000 l    df *ABS*	00000000 usb_inst.cpp
00000000 l    df *ABS*	00000000 usb_midi.c
000177a4 l     F .text.itcm	00000040 sysex_byte
000177e4 l     F .text.itcm	00000060 rx_queue_transfer
00017844 l     F .text.itcm	00000064 rx_event
2000b9a4 l     O .bss	00000004 rx_available
2000b9ac l     O .bss	0000000c rx_count
2000c956 l     O .bss	00000001 rx_head
2000b9c8 l     O .bss	0000000c rx_index
2000b9e4 l     O .bss	00000007 rx_list
2000c934 l     O .bss	00000002 rx_packet_size
2000c958 l     O .bss	00000001 rx_tail
20004320 l     O .bss	000000c0 rx_transfer
2000c95c l     O .bss	00000001 transmit_previous_timeout
2000c938 l     O .bss	00000002 tx_available
2000c95e l     O .bss	00000001 tx_head
2000c960 l     O .bss	00000001 tx_noautoflush
2000c93c l     O .bss	00000002 tx_packet_size
200044e0 l     O .bss	00000080 tx_transfer
202014c0 l     O .bss.dma	00000c00 rx_buffer
202020c0 l     O .bss.dma	00000800 txbuffer
00000000 l    df *ABS*	00000000 usb_serial.c
00017e90 l     F .text.itcm	00000060 rx_queue_transfer
202028c0 l     O .bss.dma	00001000 rx_buffer
00017ef0 l     F .text.itcm	000000b4 rx_event
00017fa4 l     F .text.itcm	00000090 usb_serial_flush_callback
202038c0 l     O .bss.dma	00002000 txbuffer
00018034 l     F .text.itcm	000001b8 usb_serial_write.part.0
2000b9a8 l     O .bss	00000004 rx_available
2000b9b8 l     O .bss	00000010 rx_count
2000c957 l     O .bss	00000001 rx_head
2000b9d4 l     O .bss	00000010 rx_index
2000b9ec l     O .bss	00000009 rx_list
2000c936 l     O .bss	00000002 rx_packet_size
2000c959 l     O .bss	00000001 rx_tail
200043e0 l     O .bss	00000100 rx_transfer
2000c95d l     O .bss	00000001 transmit_previous_timeout
2000c93a l     O .bss	00000002 tx_available
2000c95f l     O .bss	00000001 tx_head
2000c961 l     O .bss	00000001 tx_noautoflush
2000c93e l     O .bss	00000002 tx_packet_size
20004560 l     O .bss	00000080 tx_transfer
00000000 l    df *ABS*	00000000 yield.cpp
2000c94b l     O .bss	00000001 yield::running
00000000 l    df *ABS*	00000000 serialEvent.cpp
00000000 l    df *ABS*	00000000 sm_pool.c
00000000 l    df *ABS*	00000000 libm_a-sf_pow.o
00000000 l    df *ABS*	00000000 libm_a-math_errf.o
00018ab8 l     F .text.itcm	00000018 with_errnof
00018ad0 l     F .text.itcm	0000001e xflowf
00000000 l    df *ABS*	00000000 atexit_arm.o
00000000 l    df *ABS*	00000000 functexcept.o
00000000 l    df *ABS*	00000000 functional.o
00000000 l    df *ABS*	00000000 bad_alloc.o
00000000 l    df *ABS*	00000000 eh_arm.o
00000000 l    df *ABS*	00000000 eh_exception.o
00000000 l    df *ABS*	00000000 eh_globals.o
00000000 l    df *ABS*	00000000 eh_personality.o
00018f8c l     F .text.itcm	000000c0 read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0001904c l     F .text.itcm	00000048 base_of_encoded_value(unsigned char, _Unwind_Context*)
00019094 l     F .text.itcm	00000090 parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00000000 l    df *ABS*	00000000 eh_terminate.o
00000000 l    df *ABS*	00000000 eh_throw.o
00019618 l     F .text.itcm	0000004c __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00000000 l    df *ABS*	00000000 si_class_type_info.o
00000000 l    df *ABS*	00000000 tinfo.o
00000000 l    df *ABS*	00000000 vterminate.o
00000000 l    df *ABS*	00000000 stdexcept.o
00000000 l    df *ABS*	00000000 cow-stdexcept.o
00000000 l    df *ABS*	00000000 cow-string-inst.o
00000000 l    df *ABS*	00000000 class_type_info.o
00000000 l    df *ABS*	00000000 cp-demangle.o
00019cd8 l     F .text.itcm	000000f0 d_make_comp
00019dc8 l     F .text.itcm	00000074 d_number
00019e3c l     F .text.itcm	00000046 d_call_offset
00019e84 l     F .text.itcm	00000036 d_ref_qualifier
00019ebc l     F .text.itcm	000000d4 d_count_templates_scopes
00019f90 l     F .text.itcm	0000001c d_pack_length
00019fac l     F .text.itcm	00000048 d_discriminator
00019ff4 l     F .text.itcm	0000001c d_index_template_argument.part.0
0001a010 l     F .text.itcm	00000078 d_growable_string_callback_adapter
0001a088 l     F .text.itcm	00000030 next_is_type_qual.isra.0
0001a0b8 l     F .text.itcm	00000044 d_append_char
0001a0fc l     F .text.itcm	00000036 d_lookup_template_argument
0001a134 l     F .text.itcm	00000094 d_find_pack
0001a1c8 l     F .text.itcm	00000066 d_append_string
0001a230 l     F .text.itcm	0000005e d_template_param
0001a290 l     F .text.itcm	00000078 d_append_num
0001a308 l     F .text.itcm	000000e0 d_source_name
0001a3e8 l     F .text.itcm	00000194 d_substitution
0001a57c l     F .text.itcm	0000086e d_type
0001bbd0 l     F .text.itcm	00000152 d_cv_qualifiers
0001aeb4 l     F .text.itcm	0000006a d_function_type
0001c198 l     F .text.itcm	0000029c d_name
0001b4e0 l     F .text.itcm	00000064 d_template_args_1
0001b670 l     F .text.itcm	000004ec d_expression_1
0001adec l     F .text.itcm	00000080 d_parmlist
0001ae6c l     F .text.itcm	00000048 d_bare_function_type
0001af20 l     F .text.itcm	00000108 d_operator_name
0001b028 l     F .text.itcm	00000340 d_unqualified_name
0001b368 l     F .text.itcm	00000120 d_expr_primary
0001c434 l     F .text.itcm	000000f6 d_encoding.part.0
0001bd24 l     F .text.itcm	00000474 d_special_name
0001b488 l     F .text.itcm	00000058 d_template_arg
0001b544 l     F .text.itcm	0000012a d_prefix
0001bb5c l     F .text.itcm	00000072 d_exprlist
0001c52c l     F .text.itcm	000020f4 d_print_comp_inner
0001e620 l     F .text.itcm	0000005a d_print_comp
0001ecb4 l     F .text.itcm	000001d8 d_print_function_type
0001f770 l     F .text.itcm	00000254 d_maybe_print_fold_expression
0001f9c4 l     F .text.itcm	000001e4 d_maybe_print_designated_init
0001f694 l     F .text.itcm	000000da d_print_subexpr
0001f29c l     F .text.itcm	00000076 d_print_expr_op
0001e67c l     F .text.itcm	00000638 d_print_mod
0001f0d4 l     F .text.itcm	000001c8 d_print_array_type
0001ee8c l     F .text.itcm	00000248 d_print_mod_list
0001f314 l     F .text.itcm	0000037e d_demangle_callback.constprop.0
00000000 l    df *ABS*	00000000 eh_call.o
0001fc6c l     F .text.itcm	0000003a __cxxabiv1::__is_gxx_exception_class(char*)
00000000 l    df *ABS*	00000000 eh_catch.o
00000000 l    df *ABS*	00000000 eh_type.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 _udivmoddi4.o
00000000 l    df *ABS*	00000000 unwind-arm.o
000201c8 l     F .text.itcm	00000012 selfrel_offset31
000201dc l     F .text.itcm	0000005c search_EIT_table
00020238 l     F .text.itcm	00000028 __gnu_unwind_get_pr_addr
00020260 l     F .text.itcm	00000098 get_eit_entry
000202f8 l     F .text.itcm	00000058 restore_non_core_regs
00020350 l     F .text.itcm	0000000a _Unwind_decode_typeinfo_ptr.constprop.0
0002035c l     F .text.itcm	00000002 _Unwind_DebugHook
00020360 l     F .text.itcm	0000003a unwind_phase2
0002039c l     F .text.itcm	000000ca unwind_phase2_forced
00020578 l     F .text.itcm	0000001a _Unwind_GetGR
000205c4 l     F .text.itcm	00000018 _Unwind_SetGR
00020660 l     F .text.itcm	000002a8 __gnu_unwind_pr_common
00000000 l    df *ABS*	00000000 libunwind.o
00000000 l    df *ABS*	00000000 pr-support.o
00020d7c l     F .text.itcm	00000038 next_unwind_byte
00020db4 l     F .text.itcm	0000001a _Unwind_GetGR.constprop.0
00020dd0 l     F .text.itcm	00000004 unwind_UCB_from_context
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 libc_a-callocr.o
00000000 l    df *ABS*	00000000 libc_a-itoa.o
00000000 l    df *ABS*	00000000 libc_a-malloc.o
00000000 l    df *ABS*	00000000 libc_a-mallocr.o
00000000 l    df *ABS*	00000000 libc_a-mlock.o
00000000 l    df *ABS*	00000000 libc_a-realloc.o
00000000 l    df *ABS*	00000000 libc_a-reallocr.o
00000000 l    df *ABS*	00000000 libc_a-utoa.o
00000000 l    df *ABS*	00000000 libc_a-sprintf.o
00000000 l    df *ABS*	00000000 libc_a-findfp.o
00021bc8 l     F .text.itcm	00000018 stdio_exit_handler
00021be0 l     F .text.itcm	00000040 cleanup_stdio
00021c20 l     F .text.itcm	000000d4 global_stdio_init.part.0
00000000 l    df *ABS*	00000000 libc_a-fputc.o
00000000 l    df *ABS*	00000000 libc_a-fputs.o
00000000 l    df *ABS*	00000000 libc_a-vdprintf.o
00000000 l    df *ABS*	00000000 libc_a-fvwrite.o
00000000 l    df *ABS*	00000000 libc_a-fwalk.o
00000000 l    df *ABS*	00000000 libc_a-fwrite.o
00000000 l    df *ABS*	00000000 libc_a-wsetup.o
00000000 l    df *ABS*	00000000 libc_a-memcmp.o
00000000 l    df *ABS*	00000000 libc_a-memmove.o
00000000 l    df *ABS*	00000000 libc_a-memset.o
00000000 l    df *ABS*	00000000 libc_a-strncmp.o
00000000 l    df *ABS*	00000000 libc_a-strncpy.o
00000000 l    df *ABS*	00000000 libc_a-vasnprintf.o
00000000 l    df *ABS*	00000000 libc_a-locale.o
00000000 l    df *ABS*	00000000 libc_a-cxa_atexit.o
00000000 l    df *ABS*	00000000 libc_a-efgcvt.o
00000000 l    df *ABS*	00000000 libc_a-sbrkr.o
00000000 l    df *ABS*	00000000 libc_a-writer.o
00000000 l    df *ABS*	00000000 libc_a-errno.o
00000000 l    df *ABS*	00000000 libc_a-strcmp.o
00000000 l    df *ABS*	00000000 libc_a-strcpy.o
00000000 l    df *ABS*	00000000 libc_a-init.o
00000000 l    df *ABS*	00000000 libc_a-lock.o
00000000 l    df *ABS*	00000000 libc_a-memchr.o
00000000 l    df *ABS*	00000000 libc_a-strlen.o
00000000 l    df *ABS*	00000000 libc_a-__atexit.o
00000000 l    df *ABS*	00000000 libc_a-freer.o
00000000 l    df *ABS*	00000000 libc_a-mbtowc_r.o
00000000 l    df *ABS*	00000000 libc_a-svfprintf.o
00000000 l    df *ABS*	00000000 libc_a-makebuf.o
00000000 l    df *ABS*	00000000 libc_a-putc.o
00000000 l    df *ABS*	00000000 libc_a-mprec.o
00000000 l    df *ABS*	00000000 libc_a-fclose.o
00000000 l    df *ABS*	00000000 libc_a-fflush.o
00000000 l    df *ABS*	00000000 libc_a-stdio.o
00000000 l    df *ABS*	00000000 libc_a-wctomb_r.o
00000000 l    df *ABS*	00000000 libc_a-wbuf.o
00000000 l    df *ABS*	00000000 libc_a-localeconv.o
00000000 l    df *ABS*	00000000 libc_a-closer.o
00000000 l    df *ABS*	00000000 libc_a-fstatr.o
00000000 l    df *ABS*	00000000 libc_a-isattyr.o
00000000 l    df *ABS*	00000000 libc_a-lseekr.o
00000000 l    df *ABS*	00000000 libc_a-readr.o
00000000 l    df *ABS*	00000000 libc_a-ecvtbuf.o
00000000 l    df *ABS*	00000000 libc_a-wcrtomb.o
00000000 l    df *ABS*	00000000 libc_a-wcsrtombs.o
00000000 l    df *ABS*	00000000 libm_a-s_frexp.o
00000000 l    df *ABS*	00000000 libc_a-assert.o
00000000 l    df *ABS*	00000000 libc_a-dtoa.o
00025a88 l     F .text.itcm	00000126 quorem
00000000 l    df *ABS*	00000000 libc_a-fiprintf.o
00000000 l    df *ABS*	00000000 libc_a-svfiprintf.o
00000000 l    df *ABS*	00000000 libc_a-vfiprintf.o
000269c4 l     F .text.itcm	00000076 __sprint_r.part.0
000279c8 l     F .text.itcm	00000080 __sbprintf
00000000 l    df *ABS*	00000000 libc_a-fputwc.o
00000000 l    df *ABS*	00000000 libc_a-wcsnrtombs.o
00000000 l    df *ABS*	00000000 libm_a-sf_exp2_data.o
00000000 l    df *ABS*	00000000 libm_a-sf_pow_log2_data.o
00000000 l    df *ABS*	00000000 data_waveforms.c
00000000 l    df *ABS*	00000000 libc_a-ctype_.o
00000000 l    df *ABS*	00000000 data_bandlimit_step.c
00000000 l    df *ABS*	00000000 libc_a-impure.o
00000000 l    df *ABS*	00000000 eh_term_handler.o
00000000 l    df *ABS*	00000000 eh_unex_handler.o
00000000 l    df *ABS*	00000000 libc_a-__call_atexit.o
00000000 l    df *ABS*	00000000 ExFatVolume.cpp
00000000 l    df *ABS*	00000000 FatVolume.cpp
00000000 l    df *ABS*	00000000 Encoder.cpp
00000000 l    df *ABS*	00000000 HardwareSerial.cpp
00027c88 l     F .text.itcm	00000008 ___reboot_Teensyduino__veneer
00027c90 l     F .text.itcm	00000008 ___ZN11AudioStream17initialize_memoryEP18audio_block_structj_veneer
00027c98 l     F .text.itcm	00000008 ___Z14set_audioClockilmb_veneer
00027ca0 l     F .text.itcm	00000008 ___ZN7TwoWire5beginEv_veneer
00027ca8 l     F .text.itcm	00000008 ___init_veneer
600020a0 l     F .text.code	00000008 __pwm_init_veneer
600020a8 l     F .text.code	00000008 __set_arm_clock_veneer
600020b0 l     F .text.code	00000008 ___Znwj_veneer
600020b8 l     F .text.code	00000008 __memset_veneer
600020c0 l     F .text.code	00000008 __sm_set_pool_veneer
600020c8 l     F .text.code	00000008 __delay_veneer
600020d0 l     F .text.code	00000008 ___ZN13IntervalTimer11beginCyclesEPFvvEm_veneer
600020d8 l     F .text.code	00000008 ____libc_init_array_veneer
600020e0 l     F .text.code	00000008 __main_veneer
600020e8 l     F .text.code	00000008 __usb_init_serialnumber_veneer
00018bb4 g     F .text.itcm	00000030 std::__throw_length_error(char const*)
20001260 g     O .data	00000020 typeinfo name for __cxxabiv1::__forced_unwind
70000000 g     O .bss.extram	00d8e0c8 sampled
000199bc g     F .text.itcm	00000040 std::logic_error::~logic_error()
0000ce30  w    F .text.itcm	0000003a SDClass::mkdir(char const*)
00010764 g     F .text.itcm	000000b4 FatFile::makeUniqueSfn(FatLfn_t*)
200071b8 g     O .bss	00004488 note
0001658c g     F .text.itcm	00000010 main
2000168c g     O .data	0000002c vtable for __cxxabiv1::__si_class_type_info
00018b84 g     F .text.itcm	00000030 std::__throw_logic_error(char const*)
00011e0c  w    F .text.itcm	00000004 DedicatedSpiCard::isDedicatedSpi()
00003e68 g     F .text.itcm	0000004c toggleMute()
000181ec g     F .text.itcm	00000002 usb_serial_reset
00019b4c g     F .text.itcm	00000014 std::length_error::length_error(char const*)
0000df28 g     F .text.itcm	000000ae ExFatFile::addDirCluster()
000226fc g     F .text.itcm	00000024 _sbrk_r
000116f0 g     F .text.itcm	0000009a FatPartition::allocateCluster(unsigned long, unsigned long*)
00027c64 g     F .text.itcm	00000024 _wcsnrtombs_r
00022720 g     F .text.itcm	0000002c _write_r
200011ec g     O .data	00000008 typeinfo for __cxxabiv1::__forced_unwind
00001bd4  w    F .text.itcm	0000008c Encoder::isr10()
000158b4 g     F .text.itcm	0000003a String::String(String const&)
00022388 g     F .text.itcm	00000060 memcmp
20005134 g     O .bss	00000004 EventResponder::firstYield
00025898 g     F .text.itcm	0000002c _read_r
00018b08 g     F .text.itcm	0000000c .hidden __math_oflowf
200045f8 g     O .bss	000004d4 SD
2000c598 g     O .bss	00000122 usb_midi_msg_sysex
0002274c g     F .text.itcm	0000000c __errno
20003cb0 g     O .data	00000040 velocity
00025224 g     F .text.itcm	00000154 __mdiff
0000ed48 g     F .text.itcm	0000004c ExFatFile::cmpName(DirName_t const*, ExName_t*)
0000b160 g     F .text.itcm	000000dc _spi_dma_rxISR0()
2000512c g     O .bss	00000004 CLEDController::m_pHead
2000122c g     O .data	0000000c typeinfo for std::bad_exception
00025bb0 g     F .text.itcm	00000cec _dtoa_r
2000c95a g     O .bss	00000001 setvol
200016ec g     O .data	00000014 vtable for std::length_error
000210ac g     F .text.itcm	00000006 .hidden _Unwind_GetDataRelBase
0000318c  w    F .text.itcm	00000014 Encoder::isr41()
0000f2f0 g     F .text.itcm	000000e0 ExFatPartition::init(FsBlockDeviceInterface*, unsigned char)
00013184 g     F .text.itcm	000000b8 SdioCard::writeStop()
200052e0  w    O .bss	00000024 CFastLED::addLeds<(SWS2812)0, 17, (EOrder)129>(CRGB*, int, int)::controller
00011b14 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00016e04  w    F .text.itcm	00000004 abort
20006bb4 g     O .bss	00000004 errno
20003b2c g     O .data	00000040 menu
0000ae64 g     F .text.itcm	00000128 CFastLED::showColor(CRGB const&, unsigned char)
000150b8 g     F .text.itcm	00000020 AudioConnection::connect(AudioStream&, unsigned char, AudioStream&, unsigned char)
2000173c  w    O .data	00000010 SPIClass::beginTransaction(SPISettings)::clk_sel
200014f8  w    O .data	00000024 vtable for FsFile
000251e0 g     F .text.itcm	00000042 __mcmp
00023040 g     F .text.itcm	00001b44 _svfprintf_r
0000d60c g     F .text.itcm	0000002c ExFatFile::peek()
000001f8  w    F .text.itcm	00000002 CWS2812SerialController<17, (EOrder)129>::init()
000011d0 g     F .text.itcm	00000518 playNote()
000216f8 g     F .text.itcm	00000018 realloc
00002e78  w    F .text.itcm	00000068 AudioEffectEnvelope::AudioEffectEnvelope()
00000e88 g     F .text.itcm	000000ec myClock()
000028fc  w    F .text.itcm	00000090 Encoder::isr32()
0000f568 g     F .text.itcm	0000001e FatFile::close()
20001660 g     O .data	0000002c vtable for __cxxabiv1::__class_type_info
00018f7c g     F .text.itcm	00000008 __cxa_get_globals_fast
0001796c g     F .text.itcm	000000a4 usb_midi_flush_output
60002174 g       .text.code	00000000 __init_array_end
0002581c g     F .text.itcm	0000002c _fstat_r
0000f084 g     F .text.itcm	00000036 ExFatPartition::dirCache(DirPos_t*, unsigned char)
00011328 g     F .text.itcm	00000110 FatFile::getName8(char*, unsigned int)
00012098 g     F .text.itcm	0000006e SharedSpiCard::readStop()
0000d360 g     F .text.itcm	00000022 ExFatFile::getCreateDateTime(unsigned short*, unsigned short*)
00013f5c g     F .text.itcm	00000028 SdSpiArduinoDriver::begin(SdSpiConfig)
0000f1c4 g     F .text.itcm	000000be ExFatPartition::freeChain(unsigned long)
00018eec g     F .text.itcm	00000070 __gnu_end_cleanup
20001050 g     O .data	00000070 SPIClass::spiclass_lpspi4_hardware
2000502c g     O .bss	00000004 FsDateTime::callback
20003ba8 g     O .data	00000014 newSamplePack
000043f0 g     F .text.itcm	00000048 switchMode(Mode*)
2000332c g     O .data	00000004 IntervalTimer::nvic_priorites
000196bc g     F .text.itcm	00000038 __cxa_throw
00025968 g     F .text.itcm	0000004c _wcrtomb_r
000038f4  w    F .text.itcm	000000a0 AudioPlayArrayResmp::AudioPlayArrayResmp()
00016008 g     F .text.itcm	00000070 pinMode
2000b758 g     O .bss	00000014 patchCord33
2000159c g     O .data	00000030 vtable for SDClass
0000b23c  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
2000c9a0 g       .bss	00000000 _ebss
0001423c g     F .text.itcm	000000a4 FsUtf::cpToMb(unsigned long, char*, char*)
000020c8  w    F .text.itcm	0000008c Encoder::isr17()
00022b4c g     F .text.itcm	00000002 __retarget_lock_release_recursive
00020c5c g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXD
600018ec g     F .text.code	00000002 startup_default_early_hook
0000b534  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
0000ee60 g     F .text.itcm	0000006a ExFatFile::hashName(ExName_t*)
00020594 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Set
20005104 g     O .bss	00000008 AudioOutputI2S::dma
0000c7f4 g     F .text.itcm	00000090 BandLimitedWaveform::generate_sawtooth(unsigned long, int)
00003fac g     F .text.itcm	00000184 handleNoteOn(unsigned char, unsigned char, unsigned char)
0000059c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
0000e410 g     F .text.itcm	00000280 ExFatFile::write(void const*, unsigned int)
00001b48  w    F .text.itcm	0000008c Encoder::isr9()
2000c578 g     O .bss	00000004 usb_midi_handleStart
2000b744 g     O .bss	00000014 patchCord32
000257f0 g     F .text.itcm	00000008 _localeconv_r
00010b84 g     F .text.itcm	00000110 FatFile::remove()
000259d0 g     F .text.itcm	00000078 frexp
600016a8 g     F .text.code	00000034 TwoWire::configSDApin(unsigned char)
20001488 g     O .data	0000001c vtable for AudioControlSGTL5000
20006be8 g     O .bss	00000004 lastButtonPressTime
00019794 g     F .text.itcm	0000003a __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0000b23c  w    F .text.itcm	0000002c SPIClass::SPIClass(unsigned int, unsigned int)
20001200 g     O .data	00000008 typeinfo for __cxxabiv1::__foreign_exception
0001465c g     F .text.itcm	00000080 Switch::Switch(unsigned char, unsigned char, bool, unsigned long, unsigned long, unsigned long, unsigned long)
200050ac g     O .bss	00000004 AudioStream::unused
0000302c  w    F .text.itcm	00000084 Encoder::update(Encoder_internal_state_t*)
0000c008 g     F .text.itcm	00000144 AudioOutputI2S::isr()
00002cec  w    F .text.itcm	00000090 Encoder::isr39()
00015350 g     F .text.itcm	00000044 EventResponder::runFromInterrupt()
00020524 g     F .text.itcm	00000012 .hidden __gnu_Unwind_Resume_or_Rethrow
20001220 g     O .data	0000000c typeinfo for std::length_error
2000c947 g     O .bss	00000001 AudioStream::update_scheduled
2000c926 g     O .bss	00000002 AudioStream::memory_used_max
0000bc90 g     F .text.itcm	0000004e AudioEffectEnvelope::noteOn()
20003164 g     O .data	00000001 String::zerotermination
00019c1c g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
000008ec  w    F .text.itcm	00000030 AudioPlayArrayResmp::~AudioPlayArrayResmp()
20001250 g     O .data	00000008 typeinfo for std::exception
00030800 g       *ABS*	00000000 _flashimagelen
000146fc g     F .text.itcm	00000006 Switch::setSingleClickCallback(void (*)(void*), void*)
00013fdc g     F .text.itcm	00000016 SdSpiArduinoDriver::receive()
20001214 g     O .data	0000000c typeinfo for std::logic_error
0000afc8 g     F .text.itcm	0000002c CFastLED::setMaxRefreshRate(unsigned short, bool)
200045e8 g     O .bss	00000010 FastLED
00014d6c g     F .text.itcm	0000000c lpi2c4_isr()
0001fe28 g     F .text.itcm	0000008a __cxa_end_catch
2000c940 g     O .bss	00000002 usb_midi_msg_sysex_len
00027cb0 g     F .fini	00000000 _fini
000148b8  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
00018b64 g     F .text.itcm	00000020 std::__throw_bad_alloc()
0000bce0 g     F .text.itcm	00000020 AudioEffectEnvelope::noteOff()
0001487c g     F .text.itcm	0000003c TwoWire::write(unsigned char const*, unsigned int)
20003924 g     O .data	00000004 fileID
20003c10 g     O .data	00000040 set_Wav
00015610 g     F .text.itcm	0000004c Print::print(String const&)
00018f5c g     F .text.itcm	00000002 std::exception::~exception()
00019c4c g     F .text.itcm	00000042 __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0001770c g     F .text.itcm	0000001c usb_receive
00010110 g     F .text.itcm	0000000c FatFile::sync()
00020d10 g     F .text.itcm	00000022 .hidden ___Unwind_Resume_or_Rethrow
0000cc9c  w    F .text.itcm	00000002 SDClass::~SDClass()
000128e4  w    F .text.itcm	00000076 SharedSpiCard::readCSD(csd_t*)
0000d1bc g     F .text.itcm	000000d4 SDClass::begin(unsigned char)
2000516c g     O .bss	00000008 AudioOutputTDM2::dma
20001468 g     O .data	0000000c vtable for AudioEffectEnvelope
20001450 g     O .data	0000000c vtable for AudioOutputAnalog
20001714 g     O .data	00000014 vtable for std::bad_function_call
0000188c  w    F .text.itcm	0000008c Encoder::isr4()
20001280 g     O .data	00000022 typeinfo name for __cxxabiv1::__class_type_info
00005390 g     F .text.itcm	00000130 setVelocity()
0000772c g     F .text.itcm	000002ec loadSample(int, int)
00012160 g     F .text.itcm	000000e8 SharedSpiCard::cardCommand(unsigned char, unsigned long)
00020bf0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP
200005e0 g     O .data	00000202 AudioWaveformSine
0000dd90 g     F .text.itcm	00000138 ExFatFile::syncDir()
00003f54 g     F .text.itcm	00000058 light(int, int, CRGB)
000136c0 g     F .text.itcm	000003e0 SdioCard::begin(SdioConfig)
600018ec  w    F .text.code	00000002 startup_early_hook
200015f0 g     O .data	00000070 vtable for SdioCard
00000c80  w    F .text.itcm	00000050 newdigate::ResamplingArrayReader::close()
00022768 g     F .text.itcm	000002dc strcmp
00003100  w    F .text.itcm	00000014 Encoder::isr48()
60002fac g     O .text.progmem	00000050 TwoWire::i2c1_hardware
200038b4 g     O .data	00000004 __malloc_trim_threshold
0001178c g     F .text.itcm	00000024 FatPartition::fatGet(unsigned long, unsigned long*)
000061e8 g     F .text.itcm	000001f8 savePattern()
200051ec g     O .bss	000000dc Encoder::interruptArgs
00015298 g     F .text.itcm	00000034 DMAChannel::release()
20001370  w    O .data	00000024 vtable for StreamFile<FsBaseFile, unsigned long long>
6000309e  w    O .text.progmem	00000001 _serialEvent_default
00003114  w    F .text.itcm	00000014 Encoder::isr47()
00016e0c g     F .text.itcm	00000060 tempmonGetTemp
20003c50 g     O .data	00000040 singleMode
00000344  w    F .text.itcm	0000011a CWS2812SerialController<17, (EOrder)129>::showPixels(PixelController<(EOrder)129, 8, 255ul>&)
0000ba54 g     F .text.itcm	0000023c AudioEffectEnvelope::update()
00012108 g     F .text.itcm	00000018 SharedSpiCard::syncDevice()
00025740 g     F .text.itcm	000000b0 __swbuf_r
200038c4 g     O .data	00000004 _impure_ptr
0000119c  w    F .text.itcm	00000034 File::~File()
00014a6c g     F .text.itcm	000000fc TwoWire::endTransmission(unsigned char)
00006d18 g     F .text.itcm	0000037c previewSample(int, int)
000047ac g     F .text.itcm	000001d8 canvas(bool, int)
00027cb4 g       .ARM.exidx	00000000 __exidx_start
00027af4 g     F .text.itcm	00000066 _fputwc_r
00013e48 g     F .text.itcm	000000f4 SdioCard::writeSector(unsigned long, unsigned char const*)
2000518c g     O .bss	00000008 AudioInputSPDIF3::dma
00011294 g     F .text.itcm	00000094 FatFile::getSFN(char*, unsigned int)
00014e2c g     F .text.itcm	000000ac AudioStream::allocate()
00014dbc  w    F .text.itcm	0000000c AudioStream::update_all()
00000000 g       .text.itcm	00000000 _stext
2000c54c g     O .bss	00000004 usb_midi_handleAfterTouch
200012c8 g     O .data	00000025 typeinfo name for __cxxabiv1::__si_class_type_info
00017794  w    F .text.itcm	00000004 usb_serial_class::flush()
000224e0 g     F .text.itcm	000000a4 memset
2000c968 g     O .bss	00000001 usb_midi_msg_data2
2000c928 g     O .bss	00000002 AudioStream::cpu_cycles_total
60001000 g     O .text.headers	00000020 ImageVectorTable
2000c967 g     O .bss	00000001 usb_midi_msg_data1
20280000 g       .text.csf	00000000 _heap_end
00014ed8 g     F .text.itcm	00000050 AudioStream::release(audio_block_struct*)
000046e8 g     F .text.itcm	000000c4 checkPositions()
00001774  w    F .text.itcm	0000008c Encoder::isr2()
00018f64 g     F .text.itcm	00000008 std::bad_exception::what() const
00000b00  w    F .text.itcm	00000014 SDFile::write(void const*, unsigned int)
0000e76c g     F .text.itcm	000000b0 ExFatFormatter::writeUpcase(unsigned long)
00002e0c  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
70d8e0e0 g       .bss.extram	00000000 _extram_end
0000031c  w    F .text.itcm	0000000c Mode::~Mode()
20001314 g     O .data	00000012 typeinfo name for std::bad_exception
00017650 g     F .text.itcm	00000064 usb_config_tx
0000b268 g     F .text.itcm	00000234 SPIClass::begin()
00019764 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00015ba4 g     F .text.itcm	000002f0 set_arm_clock
00006a40  w    F .text.itcm	00000088 audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()
20003334 g     O .data	00000004 __brkval
2000bc2c g     O .bss	00000908 tmp
00000d1c g     F .text.itcm	0000000c handleNoteOff(unsigned char, unsigned char, unsigned char)
0000c72c g     F .text.itcm	000000c8 BandLimitedWaveform::new_step_check_pulse(unsigned long, unsigned long, int)
2000c964 g     O .bss	00000001 usb_high_speed
000154d8 g     F .text.itcm	00000060 IntervalTimer::end()
00018f64 g     F .text.itcm	00000008 transaction clone for std::bad_exception::what() const
200038e0 g     O .data	00000004 dir
600018f8 g     F .text.code	00000004 startup_debug_reset
000125c4 g     F .text.itcm	00000068 SharedSpiCard::readStart(unsigned long)
00016df4  w    F .text.itcm	00000004 _isatty
00000a0c  w    F .text.itcm	00000018 SDFile::read(void*, unsigned int)
00017728 g     F .text.itcm	00000004 usb_transfer_status
00022d64 g     F .text.itcm	000000a0 _malloc_trim_r
0000f588 g     F .text.itcm	00000052 FatFile::dirEntry(DirFat_t*)
00017784  w    F .text.itcm	00000004 usb_serial_class::clear()
00001fa8  w    F .text.itcm	00000090 Encoder::isr53()
2000c58c g     O .bss	00000004 usb_midi_handleTimeCodeQuarterFrame
000054c0 g     F .text.itcm	0000003c drawStatus()
00021160 g     F .text.itcm	00000010 malloc
000250f0 g     F .text.itcm	000000f0 __lshift
0000f788 g     F .text.itcm	000000ea FatFile::mkdir(FatFile*, char const*, bool)
00020bf8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D
20003168 g     O .data	00000120 _impure_data
00021098 g     F .text.itcm	00000012 .hidden _Unwind_GetLanguageSpecificData
00002ee0  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
00000020 g     F .text.itcm	000000bc irq_gpio6789
20003c98  w    O .data	00000016 usb_string_serial_number
600018fc g     F .text.code	000000f8 configure_cache
00000894  w    F .text.itcm	00000020 std::_Function_handler<void (unsigned char, unsigned char, unsigned char, bool, bool), audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()::{lambda(unsigned char, unsigned char, unsigned char, bool, bool)#1}>::_M_manager(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)
00011df4  w    F .text.itcm	00000006 SdCardInterface::status()
2000561c g     O .bss	00001180 _samplers
0000b49c g     F .text.itcm	00000008 SPIClass::transfer(void const*, void*, unsigned int)
200015cc g     O .data	00000024 vtable for TwoWire
00008730 g     F .text.itcm	000000a4 loadWav()
0001feb4 g     F .text.itcm	0000001a __cxa_current_exception_type
000156f0 g     F .text.itcm	00000158 breakTime(unsigned long, DateTimeFields&)
00001e04  w    F .text.itcm	0000008c Encoder::isr14()
00018dd8 g     F .text.itcm	000000b0 __cxa_type_match
000259b4 g     F .text.itcm	00000016 _wcsrtombs_r
000178a8 g     F .text.itcm	000000c4 usb_midi_configure
000223e8 g     F .text.itcm	000000f8 memmove
0001987c g     F .text.itcm	00000004 std::type_info::__is_function_p() const
0000f140 g     F .text.itcm	00000042 ExFatPartition::fatGet(unsigned long, unsigned long*)
200014a4  w    O .data	00000028 vtable for CWS2812SerialController<17, (EOrder)129>
2000c924 g     O .bss	00000002 AudioStream::memory_used
00018bec g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
000166d0 g     F .text.itcm	00000004 operator new(unsigned int)
000152cc g     F .text.itcm	00000084 EventResponder::triggerEventNotImmediate()
2000c588 g     O .bss	00000004 usb_midi_handleSystemReset
000006d0  w    F .text.itcm	00000038 StreamFile<FsBaseFile, unsigned long long>::read()
70000000 g       .bss.extram	00000000 _extram_start
60030800 g       .text.csf	00000000 __text_csf_end
200052cc g     O .bss	00000004 FatVolume::m_cwv
00022584 g     F .text.itcm	0000008a strncmp
200054a4 g     O .bss	00000001 __lock___malloc_recursive_mutex
000150d8 g     F .text.itcm	00000094 AudioConnection::disconnect()
00014378 g     F .text.itcm	000000b8 toUpcase(unsigned short)
00020468 g     F .text.itcm	00000066 .hidden __gnu_Unwind_RaiseException
00005a44 g     F .text.itcm	000000c8 drawCursor()
0000dfd8 g     F .text.itcm	000000a2 ExFatFile::rename(ExFatFile*, char const*)
00000124  w    F .text.itcm	00000004 Print::availableForWrite()
20005038 g     O .bss	00000004 AudioStream::first_update
0000226c  w    F .text.itcm	0000008c Encoder::isr20()
0000603c g     F .text.itcm	000001ac showSamplePack()
000184a8 g     F .text.itcm	0000002c usb_serial_putchar
00020c00 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D
00003d18 g     F .text.itcm	0000009c allOff()
00020538 g     F .text.itcm	00000002 .hidden _Unwind_Complete
00002e30  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
0000c570 g     F .text.itcm	00000088 BandLimitedWaveform::insert_step(int, bool, int)
600020f0 g       .text.code	00000000 __preinit_array_end
00000da4  w    F .text.itcm	000000e4 CLEDController::clearLeds(int)
0001407c g     F .text.itcm	00000056 FsCache::sync()
000006bc  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::flush()
2000c94d  w    O .bss	00000001 SDFile::name()::zeroterm
00022a3c g     F .text.itcm	000000ba strcpy
00002b3c  w    F .text.itcm	00000090 Encoder::isr36()
00015f90 g     F .text.itcm	00000054 digitalWrite
00003724  w    F .text.itcm	000000b4 Encoder::Encoder(unsigned char, unsigned char)
0002053c g     F .text.itcm	0000000c .hidden _Unwind_DeleteException
00012fe8 g     F .text.itcm	0000007c SdioCard::isBusy()
00022674 g     F .text.itcm	00000062 _vasnprintf_r
0000f5fc g     F .text.itcm	00000020 FatFile::getModifyDateTime(unsigned short*, unsigned short*)
20001428  w    O .data	00000028 vtable for usb_serial_class
00015538  w    F .text.itcm	00000006 usb_serial_class::write(unsigned char)
200011f4 g     O .data	0000000c typeinfo for __cxxabiv1::__class_type_info
20005100 g     O .bss	00000004 AudioOutputI2S::block_right_2nd
00014fd0 g     F .text.itcm	00000018 AudioConnection::AudioConnection()
0000cd24  w    F .text.itcm	00000052 SDClass::rmdir(char const*)
00012a3c g     F .text.itcm	00000068 SharedSpiCard::writeData(unsigned char const*)
00019c10 g     F .text.itcm	0000000c __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
200067d0 g     O .bss	0000001c dac
00011e00  w    F .text.itcm	00000004 SharedSpiCard::errorData() const
2000bc28 g     O .bss	00000004 systick_safe_read
0001143c  w    F .text.itcm	00000044 FsBlockDeviceInterface::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20003328 g     O .data	00000004 __cxxabiv1::__unexpected_handler
00011e84  w    F .text.itcm	00000006 SharedSpiCard::end()
00004c28 g     F .text.itcm	00000430 savePack()
00012528 g     F .text.itcm	0000009c SharedSpiCard::sectorCount()
000226e4 g     F .text.itcm	0000000c __cxa_atexit
00015a38 g     F .text.itcm	00000022 String::operator=(char const*)
00014630 g     F .text.itcm	0000002c Switch::poll()
0000d384 g     F .text.itcm	00000022 ExFatFile::getModifyDateTime(unsigned short*, unsigned short*)
0000313c  w    F .text.itcm	00000014 Encoder::isr45()
00016ddc  w    F .text.itcm	00000004 _read
0001516c g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
00012d0c g     F .text.itcm	00000010 SdioCard::readOCR(unsigned long*)
200039a8 g     O .data	00000080 isr_table_gpio2
0000597c g     F .text.itcm	000000c8 drawTimer(int)
6000304c g     O .text.progmem	00000050 TwoWire::i2c4_hardware
0001772c g     F .text.itcm	00000058 usb_init_serialnumber
00000025 g       *ABS*	00000000 _teensy_model_identifier
20003a28 g     O .data	00000080 isr_table_gpio3
00024b84 g     F .text.itcm	000000d8 __smakebuf_r
0001fcc8 g     F .text.itcm	000000e4 __cxa_call_unexpected
20001208 g     O .data	0000000c typeinfo for __cxxabiv1::__si_class_type_info
00012b8c  w    F .text.itcm	00000002 SdioCard::end()
00012688 g     F .text.itcm	00000074 DedicatedSpiCard::readSectorsCallback(unsigned long, unsigned char*, unsigned int, void (*)(unsigned long, unsigned char*, void*), void*)
20003928 g     O .data	00000080 isr_table_gpio1
00024d20 g     F .text.itcm	00000012 _Bfree
00011bc0 g     F .text.itcm	000000ae FsBaseFile::open(FsVolume*, char const*, int)
00022b44 g     F .text.itcm	00000002 __retarget_lock_close_recursive
20003aa8 g     O .data	00000080 isr_table_gpio4
00014fe8 g     F .text.itcm	000000d0 AudioConnection::connect()
00021180 g     F .text.itcm	00000560 _malloc_r
000019a4  w    F .text.itcm	0000008c Encoder::isr6()
00016fc4 g     F .text.itcm	0000002c usb_stop_sof_interrupts
0000ef8c g     F .text.itcm	000000aa ExFatPartition::bitmapModify(unsigned long, unsigned long, bool)
00015f3c g     F .text.itcm	00000054 micros
00016de8  w    F .text.itcm	0000000a _fstat
200014cc  w    O .data	0000002c vtable for File
20001360 g     O .data	0000000d typeinfo name for std::type_info
200016d8 g     O .data	00000014 vtable for std::logic_error
000054fc g     F .text.itcm	000000a0 drawPages()
200003c8 g     O .data	00000028 __mprec_bigtens
00021710 g     F .text.itcm	000003d8 _realloc_r
2000c950 g     O .bss	00000001 external_psram_size
0000dd30 g     F .text.itcm	0000005e ExFatFile::rmdir()
00021b84 g     F .text.itcm	00000004 utoa
2000c955 g     O .bss	00000001 resetTimerActive
200051cc g     O .bss	00000008 AudioOutputI2SQuad::dma
2000c570 g     O .bss	00000004 usb_midi_handleSongPosition
000130b0 g     F .text.itcm	000000d4 SdioCard::writeStart(unsigned long)
200054a0 g     O .bss	00000001 __lock___atexit_recursive_mutex
00023010 g     F .text.itcm	0000002a __ascii_mbtowc
00020910  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr1
0000c69c g     F .text.itcm	0000008e BandLimitedWaveform::new_step_check_square(unsigned long, int)
00020918  w    F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr2
00018c44 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
60002094 g     F .text.code	00000000 _init
000002e4  w    F .text.itcm	0000000e newdigate::ResamplingArrayReader::~ResamplingArrayReader()
0000b084 g     F .text.itcm	000000dc _spi_dma_rxISR1()
00012d1c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00013358 g     F .text.itcm	000000fc SdioCard::erase(unsigned long, unsigned long)
000146dc g     F .text.itcm	00000006 Switch::setPushedCallback(void (*)(void*), void*)
00018af0 g     F .text.itcm	0000000c .hidden __math_uflowf
00015410 g     F .text.itcm	000000c8 IntervalTimer::beginCycles(void (*)(), unsigned long)
2000517c g     O .bss	00000008 AudioInputI2SHex::dma
600016dc g     F .text.code	00000054 TwoWire::setSDA(unsigned char)
200067bc g     O .bss	00000010 buttons
20003b94 g     O .data	00000014 myOrigFile
00020908 g     F .text.itcm	00000006 .hidden __aeabi_unwind_cpp_pr0
0001778c  w    F .text.itcm	00000004 usb_serial_class::read()
20003c98 g     O .data	00000016 usb_string_serial_number_default
000226d8 g     F .text.itcm	0000000c __locale_mb_cur_max
0000d46c g     F .text.itcm	0000019e ExFatFile::read(void*, unsigned int)
200051d4 g     O .bss	00000008 AudioOutputPT8211_2::dma
200067ac g     O .bss	00000010 buttonString
0000fbf0 g     F .text.itcm	00000044 FatFile::readDirCache(bool)
2000b998 g     O .bss	00000004 pulseCount
0000062c  w    F .text.itcm	0000003c SDFile::truncate(unsigned long long)
000124b4 g     F .text.itcm	00000074 SharedSpiCard::readRegister(unsigned char, void*)
20001474  w    O .data	00000014 vtable for AudioPlayArrayResmp
00019778 g     F .text.itcm	0000001c __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00000ac0  w    F .text.itcm	00000040 SDFile::~SDFile()
0000f3d0 g     F .text.itcm	00000018 ExFatPartition::rootLength()
0000cf94  w    F .text.itcm	0000003c SDClass::totalSize()
20201240 g     O .bss.dma	00000275 usb_descriptor_buffer
0000dec8 g     F .text.itcm	0000005e ExFatFile::sync()
00014f88 g     F .text.itcm	00000046 AudioStream::receiveWritable(unsigned int)
00018b14 g     F .text.itcm	00000024 .hidden __math_divzerof
000222bc g     F .text.itcm	000000cc __swsetup_r
2000c949 g     O .bss	00000001 EventResponder::runningFromYield
0000f61c g     F .text.itcm	0000016a FatFile::mkdir(FatFile*, FatLfn_t*)
00012d30 g     F .text.itcm	0000001c SdioCard::type() const
20005130 g     O .bss	00000004 CLEDController::m_pTail
000030b0  w    F .text.itcm	00000014 Encoder::isr52()
00013d08 g     F .text.itcm	00000030 SdioCard::syncDevice()
200050f4 g     O .bss	00000004 AudioOutputI2S::block_left_1st
00016df8  w    F .text.itcm	00000006 _lseek
000221f0 g     F .text.itcm	000000aa _fwrite_r
000016e8  w    F .text.itcm	0000008c Encoder::isr1()
000052a4 g     F .text.itcm	000000ec drawVelocity(CRGB)
0000f0bc g     F .text.itcm	00000082 ExFatPartition::dirSeek(DirPos_t*, unsigned long)
00007a18 g     F .text.itcm	00000be4 setup
20001340 g     O .data	0000000d typeinfo name for std::bad_alloc
00010268 g     F .text.itcm	000001b4 FatFile::write(void const*, unsigned int)
0001011c g     F .text.itcm	000000d8 FatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
60001020 g     O .text.headers	0000000c BootData
0000cc8c g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
00001cec  w    F .text.itcm	0000008c Encoder::isr12()
00000460 g     F .text.itcm	0000013c buttonCallbackFunction(void*)
000195dc g     F .text.itcm	00000008 __cxxabiv1::__unexpected(void (*)())
2000bc20 g     O .bss	00000004 systick_cycle_count
00024d34 g     F .text.itcm	000000a4 __multadd
000176b4 g     F .text.itcm	00000030 usb_prepare_transfer
00021060 g     F .text.itcm	0000002a .hidden __gnu_unwind_frame
000037d8  w    F .text.itcm	0000011c polyphonicsampler::noteOn(unsigned char, unsigned char)
2000b910 g     O .bss	00000014 pc4
0000ff60 g     F .text.itcm	000000e2 FatFile::openCachedEntry(FatFile*, unsigned short, int, unsigned char)
00003178  w    F .text.itcm	00000014 Encoder::isr42()
00027fa4 g       .text.itcm	00000000 _etext
000257f8 g     F .text.itcm	00000024 _close_r
2000b960 g     O .bss	00000014 pc8
0000a86c g     F .text.itcm	00000474 WS2812Serial::show()
2000b974 g     O .bss	00000014 pc9
0000d0ac g     F .text.itcm	00000110 SDClass::mediaPresent()
2000c574 g     O .bss	00000004 usb_midi_handleSongSelect
00004a80 g     F .text.itcm	00000098 clearPage()
000156ac g     F .text.itcm	0000001c Print::printf(char const*, ...)
00011ce8 g     F .text.itcm	000000e4 FsVolume::begin(FsBlockDeviceInterface*, bool, unsigned char)
00025a48 g     F .text.itcm	00000040 __assert_func
60001730 g     F .text.code	00000034 TwoWire::configSCLpin(unsigned char)
000166e4 g     F .text.itcm	00000062 ultoa
000111b4 g     F .text.itcm	000000b4 FatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
200050ec g     O .bss	00000008 AudioInputTDM2::dma
20000f70 g     O .data	00000070 SPIClass::spiclass_lpspi1_hardware
00012120 g     F .text.itcm	00000040 DedicatedSpiCard::setDedicatedSpi(bool)
00014808  w    F .text.itcm	0000000c TwoWire::available()
00015398 g     F .text.itcm	00000020 systick_isr
000065fc g     F .text.itcm	00000074 togglePlay(bool&)
20004f7c  w    O .bss	00000004 guard variable for CFastLED::addLeds<(SWS2812)0, 17, (EOrder)129>(CRGB*, int, int)::controller
00002a1c  w    F .text.itcm	00000090 Encoder::isr34()
00018e88 g     F .text.itcm	00000064 __cxa_begin_cleanup
60001f04 g     F .text.code	000000e8 usb_init
000001c8  w    F .text.itcm	00000002 newdigate::ResamplingArrayReader::~ResamplingArrayReader()
2000c584 g     O .bss	00000004 usb_midi_handleSysExPartial
00018b38 g     F .text.itcm	0000001e .hidden __math_invalidf
000025b4  w    F .text.itcm	0000008c Encoder::isr26()
2000b85c g     O .bss	00000014 pc0
600030dc g     O .text.progmem	00000275 usb_config_descriptor_12
0000e6b0 g     F .text.itcm	0000002e ExFatFormatter::syncUpcase()
2000c96b g     O .bss	00000001 waitForFourBars
2000b8e8 g     O .bss	00000014 pc2
00002154  w    F .text.itcm	0000008c Encoder::isr18()
20006bec g     O .bss	00000004 lastClockTime
2000b870 g     O .bss	00000014 pc1
20000000 g       .data	00000000 _sdata
00005e7c g     F .text.itcm	000001c0 showMenu()
00001c60  w    F .text.itcm	0000008c Encoder::isr11()
2000b678 g     O .bss	00000010 oldPos
00013b9c g     F .text.itcm	000000d4 SdioCard::readStart(unsigned long)
00002e0c  w    F .text.itcm	00000022 AudioConnection::AudioConnection(AudioStream&, AudioStream&)
0001262c g     F .text.itcm	0000005c DedicatedSpiCard::readSectors(unsigned long, unsigned char*, unsigned int)
00001abc  w    F .text.itcm	0000008c Encoder::isr8()
20003324 g     O .data	00000004 __cxxabiv1::__terminate_handler
2000bc24 g     O .bss	00000004 systick_millis_count
00020d58 g     F .text.itcm	00000022 .hidden ___Unwind_Backtrace
00012b80  w    F .text.itcm	00000004 SdCardInterface::hasDedicatedSpi()
aaaaabff g       *ABS*	00000000 _flexram_bank_config
00015e94 g     F .text.itcm	000000a8 delay
0000bff0 g     F .text.itcm	00000014 AudioOutputAnalog::update()
20003330 g     O .data	00000004 __atexit_recursive_mutex
00022cdc g     F .text.itcm	00000088 __register_exitproc
00022e04 g     F .text.itcm	0000020c _free_r
20004000 g     O .data	000002c0 _VectorsRam
000195b8 g     F .text.itcm	00000010 __cxxabiv1::__terminate(void (*)())
0000b4a4 g     F .text.itcm	00000048 SPIClass::end()
00014850 g     F .text.itcm	0000002a TwoWire::write(unsigned char)
00012b88  w    F .text.itcm	00000004 SdCardInterface::setDedicatedSpi(bool)
0000b558  w    F .text.itcm	00000004 AudioControlSGTL5000::disable()
000126fc g     F .text.itcm	00000068 DedicatedSpiCard::readSector(unsigned long, unsigned char*)
00004b18 g     F .text.itcm	00000110 drawVolume(int)
200030d8 g     O .data	0000006c usb_descriptor_list
00012aa4 g     F .text.itcm	00000098 SharedSpiCard::writeSector(unsigned long, unsigned char const*)
2000c560 g     O .bss	00000004 usb_midi_handleNoteOn
2000c590 g     O .bss	00000004 usb_midi_handleTuneRequest
00015a28 g     F .text.itcm	0000000e String::operator=(String const&)
2000c580 g     O .bss	00000004 usb_midi_handleSysExComplete
2000b8fc g     O .bss	00000014 pc3
00018c3c g     F .text.itcm	00000008 std::bad_alloc::what() const
20000000 g     O .data	00000280 endpoint_queue_head
2000bb04 g     O .bss	0000001c sound12
00014924 g     F .text.itcm	00000108 TwoWire::force_clock()
00019cac g     F .text.itcm	0000002a __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00014dc8 g     F .text.itcm	00000064 software_isr()
2000bacc g     O .bss	0000001c sound10
200051bc g     O .bss	00000008 AudioOutputSPDIF2::dma
0000298c  w    F .text.itcm	00000090 Encoder::isr33()
0000c520 g     F .text.itcm	00000050 BandLimitedWaveform::lookup(int)
200051c4 g     O .bss	00000008 AudioOutputSPDIF3::dma
2000ba08 g     O .bss	00000004 sampleIsLoaded
00002d7c  w    F .text.itcm	00000090 Encoder::isr40()
2000c966 g     O .bss	00000001 usb_midi_msg_channel
000184ec g     F .text.itcm	00000050 usb_serial_write_buffer_free
000182dc g     F .text.itcm	000000e0 usb_serial_read
00019c30 g     F .text.itcm	0000001c __cxxabiv1::__class_type_info::~__class_type_info()
00012cac g     F .text.itcm	0000000c SdioCard::errorCode() const
2000bb20 g     O .bss	0000001c sound13
0000f9e4 g     F .text.itcm	0000003a FatFile::openRoot(FatVolume*)
200054d8 g     O .bss	00000004 __malloc_max_total_mem
000210b8  w    F .text.itcm	00000002 .hidden __aeabi_ldiv0
20005174 g     O .bss	00000008 AudioInputAnalog::dma
200050e4 g     O .bss	00000008 AudioInputPDM2::dma
200038b8 g     O .data	0000000c __sglue
000258c4 g     F .text.itcm	000000a4 fcvtbuf
000158f0 g     F .text.itcm	0000000e String::~String()
000199bc g     F .text.itcm	00000040 std::logic_error::~logic_error()
20007178 g     O .bss	00000040 mute
00001f1c  w    F .text.itcm	0000008c Encoder::isr16()
2000182c g     O .data	00000101 _ctype_
00025514 g     F .text.itcm	00000130 __sflush_r
00010ab0 g     F .text.itcm	000000d4 FatFile::parsePathName(char const*, FatLfn_t*, char const**)
20001300 g     O .data	00000011 typeinfo name for std::length_error
00013064 g     F .text.itcm	00000020 SdioCard::status()
0000feb0 g     F .text.itcm	000000ae FatFile::seekSet(unsigned long)
0001fed0 g     F .text.itcm	00000000 .hidden __aeabi_uldivmod
00012d20  w    F .text.itcm	0000000e SdioCard::~SdioCard()
00007094 g     F .text.itcm	00000698 showWave()
60000000 g     O .text.headers	00000200 FlexSPI_NOR_Config
600018f0  w    F .text.code	00000002 startup_middle_hook
00010ed4 g     F .text.itcm	0000011c FatFormatter::makeFat16()
00003724  w    F .text.itcm	000000b4 Encoder::Encoder(unsigned char, unsigned char)
20005138 g     O .bss	00000004 EventResponder::lastInterrupt
20004300 g     O .bss	00000020 endpoint0_transfer_data
000001fc  w    F .text.itcm	00000004 CPixelLEDController<(EOrder)129, 8, 255ul>::lanes()
00021d3c g     F .text.itcm	0000000c __sfp_lock_release
000001d4  w    F .text.itcm	00000004 newdigate::ResamplingArrayReader::createSourceBuffer()
000199fc g     F .text.itcm	00000040 std::length_error::~length_error()
00004984 g     F .text.itcm	000000fc toggleCopyPaste()
20003d31 g     O .data	00000001 yield_active_check_flags
00018f60 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
000197d0 g     F .text.itcm	0000007a __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0002229c g     F .text.itcm	00000020 fwrite
00005b0c g     F .text.itcm	00000184 showIcons(String, CRGB)
00004438 g     F .text.itcm	00000190 mapAndClampEncoderValue(Encoder&, int, int, int)
0000249c  w    F .text.itcm	0000008c Encoder::isr24()
60001d78 g     F .text.code	0000005c usb_pll_start
00019124 g     F .text.itcm	00000494 __gxx_personality_v0
000160d4 g     F .text.itcm	00000048 eeprom_initialize
00021134 g     F .text.itcm	0000002c itoa
20003c90 g     O .data	00000008 thisTimer
200051e8 g     O .bss	00000004 Switch::_beepAllCallbackParam
00000140  w    F .text.itcm	0000000c File::available()
00002f64  w    F .text.itcm	000000c8 SDClass::open(char const*, unsigned char)
0000fc34 g     F .text.itcm	000001ea FatFile::rename(FatFile*, char const*)
00021cf4 g     F .text.itcm	0000003c __sinit
0000d638 g     F .text.itcm	000000ea ExFatFile::seekSet(unsigned long long)
200003f0 g     O .data	000000c8 __mprec_tens
0000dbc4 g     F .text.itcm	00000024 ExFatFile::openNext(ExFatFile*, int)
00002c5c  w    F .text.itcm	00000090 Encoder::isr38()
00020d10 g     F .text.itcm	00000022 .hidden _Unwind_Resume_or_Rethrow
00021e4c g     F .text.itcm	0000004a _vdprintf_r
000186c0  w    F .text.itcm	00000002 serialEvent()
000068b8 g     F .text.itcm	00000188 autoLoad()
00014a2c g     F .text.itcm	00000040 TwoWire::wait_idle()
0000b944  w    F .text.itcm	00000110 SPIClass::beginTransaction(SPISettings)
200034a8 g     O .data	00000408 __malloc_av_
2000c951 g     O .bss	00000001 freshnote
00016a94 g     F .text.itcm	0000007a flexpwm_init
2000c554 g     O .bss	00000004 usb_midi_handleContinue
600030d8 g     O .text.progmem	00000004 string0
00013184 g     F .text.itcm	000000b8 SdioCard::readStop()
00019878 g     F .text.itcm	00000002 std::type_info::~type_info()
000210b8  w    F .text.itcm	00000002 .hidden __aeabi_idiv0
200067a8 g     O .bss	00000004 beat
00027a48 g     F .text.itcm	000000aa __fputwc
00002f40  w    F .text.itcm	00000024 File::dec_refcount()
000008d0  w    F .text.itcm	0000001a SDFile::size()
20001350 g     O .data	0000000d typeinfo name for std::exception
00005058 g     F .text.itcm	000000fc showNumber(int, CRGB, int)
200032d4 g     O .data	00000040 SampleRate
200050cc g     O .bss	00000008 AudioInputPDM::dma
2000c568 g     O .bss	00000004 usb_midi_handleProgramChange
0000b850 g     F .text.itcm	0000006c AudioControlSGTL5000::volumeInteger(unsigned int)
200013ac g     O .data	0000000c vtable for AudioOutputI2S
600019f4 g     F .text.code	00000384 configure_external_ram
200054dc g     O .bss	00000004 __malloc_top_pad
000038f4  w    F .text.itcm	000000a0 AudioPlayArrayResmp::AudioPlayArrayResmp()
00020920 g     F .text.itcm	000002ae .hidden _Unwind_VRS_Pop
00022610 g     F .text.itcm	00000064 strncpy
200067cc g     O .bss	00000004 clockCount
200050dc g     O .bss	00000008 AudioInputI2S2::dma
00002e30  w    F .text.itcm	00000048 AudioStream::AudioStream(unsigned char, audio_block_struct**)
00018bec g     F .text.itcm	00000014 std::bad_function_call::~bad_function_call()
20005618 g     O .bss	00000004 __stdio_exit_handler
200042e0 g     O .bss	00000020 endpoint0_transfer_ack
00010044 g     F .text.itcm	000000ca FatFile::openNext(FatFile*, int)
2000c534 g     O .bss	00000004 totalInterval
0000a670 g     F .text.itcm	0000001a mapf(double, double, double, double, double)
00020c10 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_VFP_D_16_to_31
000001cc  w    F .text.itcm	00000008 newdigate::ResamplingArrayReader::getSourceBufferValue(long)
0000f548 g     F .text.itcm	0000001e FatFile::cacheDirEntry(unsigned char)
0001779c  w    F .text.itcm	00000008 usb_serial_class::write(unsigned char const*, unsigned int)
2000c92c g     O .bss	00000002 AudioStream::memory_pool_first_mask
2000c6c4 g     O .bss	000000d0 usedFiles
00010c94  w    F .text.itcm	0000003a FsBlockDeviceInterface::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
2000c962 g     O .bss	00000001 usb_cdc_line_rtsdtr
00019acc g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
00022b40 g     F .text.itcm	00000002 __retarget_lock_init_recursive
00015968 g     F .text.itcm	00000026 String::String(char const*)
2000b6f4 g     O .bss	00000014 patchCord13
2000b884 g     O .bss	00000014 pc10
0000014c  w    F .text.itcm	00000010 File::peek()
0001611c g     F .text.itcm	0000007c eeprom_read_byte
0000be08 g     F .text.itcm	00000000 memcpy_tointerleaveLR
60001dd4 g     F .text.code	00000130 tempmon_init
2000b898 g     O .bss	00000014 pc11
20001700 g     O .data	00000014 vtable for std::bad_exception
0000b00c  w    F .text.itcm	00000016 EventResponder::triggerEvent(int, void*)
000030d8  w    F .text.itcm	00000014 Encoder::isr50()
2000b6b8 g     O .bss	00000014 patchCord10
00000d54 g     F .text.itcm	0000001c handleTimeCodeQuarterFrame()
2000b6e0 g     O .bss	00000014 patchCord12
00016c28 g     F .text.itcm	00000180 unused_interrupt_vector
0000cea4  w    F .text.itcm	000000f0 SDClass::usedSize()
00016c04 g     F .text.itcm	00000024 rtc_get
20000fe0 g     O .data	00000070 SPIClass::spiclass_lpspi3_hardware
20003294 g     O .data	00000040 SMP
200054ac g     O .bss	00000028 __malloc_current_mallinfo
000001b4  w    F .text.itcm	00000012 SDFile::isOpen()
00012248 g     F .text.itcm	000001f4 SharedSpiCard::begin(SdSpiConfig)
200054e0 g     O .bss	00000138 __sf
2000b6cc g     O .bss	00000014 patchCord11
000156c8 g     F .text.itcm	00000028 Print::printNumber(unsigned long, unsigned char, unsigned char)
2000b708 g     O .bss	00000014 patchCord14
000105fc g     F .text.itcm	00000168 FatFile::makeSFN(FatLfn_t*)
0000c14c g     F .text.itcm	00000098 AudioOutputI2S::update()
0000f988 g     F .text.itcm	0000005a FatFile::openCluster(FatFile*)
200050d4 g     O .bss	00000008 AudioInputTDM::dma
00000cd0  w    F .text.itcm	0000004c StreamFile<FsBaseFile, unsigned long long>::available()
20005310 g     O .bss	00000190 __atexit0
00018400 g     F .text.itcm	00000018 usb_serial_available
00003db4 g     F .text.itcm	000000b4 drawNoSD()
00020c08 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP_D_16_to_31
00027fa8 g       .ARM.exidx	00000000 __exidx_end
2000c6bc g     O .bss	00000004 usb_timer0_callback
20001394 g     O .data	0000000c vtable for AudioMixer4
00014f28 g     F .text.itcm	00000046 AudioStream::transmit(audio_block_struct*, unsigned char)
00015b6c g     F .text.itcm	00000036 String::getBytes(unsigned char*, unsigned int, unsigned int) const
2000c94c  w    O .bss	00000001 PixelController<(EOrder)129, 8, 255ul>::init_binary_dithering()::R
6000309c  w    O .text.progmem	00000001 _serialEventUSB2_default
00018b58 g     F .text.itcm	0000000a __aeabi_atexit
00000720  w    F .text.itcm	00000046 SDFile::rewindDirectory()
00012b84  w    F .text.itcm	00000004 SdCardInterface::isDedicatedSpi()
20001244 g     O .data	0000000c typeinfo for std::bad_alloc
000199fc g     F .text.itcm	00000040 std::length_error::~length_error()
000008ec  w    F .text.itcm	00000030 AudioPlayArrayResmp::~AudioPlayArrayResmp()
0000fbc8 g     F .text.itcm	00000028 FatFile::peek()
2000c932 g     O .bss	00000002 dma_channel_allocated_mask
2000c594 g     O .bss	00000004 usb_midi_handleVelocityChange
20001328 g     O .data	00000016 typeinfo name for std::bad_function_call
0000e07c g     F .text.itcm	0000005e ExFatFile::mkdir(ExFatFile*, ExName_t*)
00000ac0  w    F .text.itcm	00000040 SDFile::~SDFile()
202058c0 g       .bss.dma	00000000 _heap_start
000221a8 g     F .text.itcm	00000046 _fwalk_sglue
00010e78 g     F .text.itcm	0000005c FatFormatter::writeMbr()
0000f978 g     F .text.itcm	0000000e FatFile::open(FatVolume*, char const*, int)
600030a0  w    O .text.progmem	0000001e usb_string_product_name
20005194 g     O .bss	00000008 AudioOutputSPDIF::dma
00011e80  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
00017790  w    F .text.itcm	00000004 usb_serial_class::available()
00021dac g     F .text.itcm	00000086 _fputs_r
000146ec g     F .text.itcm	00000006 Switch::setLongPressCallback(void (*)(void*), void*)
00025378 g     F .text.itcm	000000d4 __d2b
000022f8  w    F .text.itcm	0000008c Encoder::isr21()
000008b4  w    F .text.itcm	0000001a SDFile::position()
00013f3c g     F .text.itcm	00000006 sdCsInit(unsigned char)
0001041c g     F .text.itcm	000000bc FatFile::cmpName(unsigned short, FatLfn_t*, unsigned char)
2000c544 g     O .bss	00000004 usb_cdc_line_rtsdtr_millis
200068dc g     O .bss	00000038 envelope10
0000e6e0 g     F .text.itcm	00000040 ExFatFormatter::writeUpcaseByte(unsigned char)
00012cb8 g     F .text.itcm	0000000c SdioCard::errorData() const
00001170  w    F .text.itcm	0000002c File::~File()
200067ec g     O .bss	00000070 encoders
00020d34 g     F .text.itcm	00000022 .hidden _Unwind_ForcedUnwind
2000c56c g     O .bss	00000004 usb_midi_handleRealTimeSystem
2000328c g     O .data	00000004 F_CPU_ACTUAL
00000b14  w    F .text.itcm	00000014 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char const*, unsigned int)
600030c0 g     O .text.progmem	00000018 usb_string_manufacturer_name_default
20003338 g     O .data	00000000 .hidden __dso_handle
00024e78 g     F .text.itcm	0000005c __i2b
00016de0  w    F .text.itcm	00000006 _close
00021d30 g     F .text.itcm	0000000c __sfp_lock_acquire
200070c0 g     O .bss	0000005c multiresponseButton3
0000c1e4 g     F .text.itcm	000000dc AudioOutputI2S::config_i2s(bool)
00005154 g     F .text.itcm	00000150 showIntro()
2000711c g     O .bss	0000005c multiresponseButton4
2000b988 g     O .bss	0000000c previousEncoderValues
20006bf0 g     O .bss	00000300 leds
000066d0 g     F .text.itcm	000001e8 loadPattern()
20007008 g     O .bss	0000005c multiresponseButton1
00011438 g     F .text.itcm	00000004 FatFile::getName(char*, unsigned int)
20007064 g     O .bss	0000005c multiresponseButton2
0000015c  w    F .text.itcm	0000000c File::flush()
00001800  w    F .text.itcm	0000008c Encoder::isr3()
00016b10 g     F .text.itcm	000000f4 pwm_init
00006c44  w    F .text.itcm	000000d4 void std::vector<audiosample*, std::allocator<audiosample*> >::_M_realloc_insert<audiosample* const&>(__gnu_cxx::__normal_iterator<audiosample**, std::vector<audiosample*, std::allocator<audiosample*> > >, audiosample* const&)
00021ae8 g     F .text.itcm	0000009c __utoa
00018f84 g     F .text.itcm	00000008 __cxa_get_globals
00018afc g     F .text.itcm	0000000c .hidden __math_may_uflowf
00003128  w    F .text.itcm	00000014 Encoder::isr46()
200038b0 g     O .data	00000004 __malloc_sbrk_base
000256bc g     F .text.itcm	0000003e __swrite
2000c538 g     O .bss	00000004 unpaintMode
60001fec g     F .text.code	00000054 _reboot_Teensyduino_
00015990 g     F .text.itcm	0000002e String::String(int, unsigned char)
0002544c g     F .text.itcm	000000c6 _fclose_r
60001764 g     F .text.code	00000058 TwoWire::setSCL(unsigned char)
000097f0  w    F .text.itcm	000002e4 AudioPlayResmp<newdigate::ResamplingArrayReader>::update()
000090d4  w    F .text.itcm	00000718 newdigate::ResamplingReader<short, File>::readNextValue(short*, unsigned short)
2000679c g     O .bss	0000000c audioShield
000268c4 g     F .text.itcm	00000100 __ssprint_r
20005114 g     O .bss	00000010 AudioOutputPWM::dma
00000d70 g     F .text.itcm	00000034 handleStart()
2000c6c0 g     O .bss	00000004 usb_timer1_callback
0000d310 g     F .text.itcm	0000003c ExFatFile::dirCache(unsigned char, unsigned char)
20005144 g     O .bss	00000020 HardwareSerial::s_serials_with_serial_events
00011b14 g     F .text.itcm	00000084 FsBaseFile::FsBaseFile(FsBaseFile const&)
00004130 g     F .text.itcm	000002c0 paint()
200050b0 g     O .bss	00000004 ExFatVolume::m_cwv
0000ace0 g     F .text.itcm	00000058 CFastLED::addLeds(CLEDController*, CRGB*, int, int)
00024cd4 g     F .text.itcm	0000004c _Balloc
20006ad4 g     O .bss	00000038 envelope6
2000c94a g     O .bss	00000001 HardwareSerial::s_count_serials_with_serial_events
00013d38 g     F .text.itcm	00000110 SdioCard::readSector(unsigned long, unsigned char*)
00011e9c g     F .text.itcm	00000064 DedicatedSpiCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
20006b7c g     O .bss	00000038 envelope9
200051dc g     O .bss	00000008 AsyncAudioInputSPDIF3::dma
20006b44 g     O .bss	00000038 envelope8
2000c948 g     O .bss	00000001 AudioOutputI2S::update_responsibility
000158b4 g     F .text.itcm	0000003a String::String(String const&)
600020f0 g       .text.code	00000000 __preinit_array_start
00015b08 g     F .text.itcm	00000038 String::equals(String const&) const
00012cc4 g     F .text.itcm	00000024 SdioCard::readCID(CID*)
200054d4 g     O .bss	00000004 __malloc_max_sbrked_mem
2000bc1c g     O .bss	00000004 startTime
00012ce8 g     F .text.itcm	00000024 SdioCard::readCSD(csd_t*)
00010ff0 g     F .text.itcm	000001c4 FatFormatter::makeFat32()
200052c8 g     O .bss	00000004 FsVolume::m_cwv
00016e00  w    F .text.itcm	00000004 __cxa_pure_virtual
00014d54 g     F .text.itcm	0000000c lpi2c1_isr()
00014150 g     F .text.itcm	0000004c FsName::get16()
00014430 g     F .text.itcm	00000078 Switch::triggerCallbacks()
2000b688 g     O .bss	00000004 pagebeat
00006ac8  w    F .text.itcm	000000d4 void std::vector<audiovoice<AudioPlayArrayResmp>*, std::allocator<audiovoice<AudioPlayArrayResmp>*> >::_M_realloc_insert<audiovoice<AudioPlayArrayResmp>* const&>(__gnu_cxx::__normal_iterator<audiovoice<AudioPlayArrayResmp>**, std::vector<audiovoice<AudioPlayArrayResmp>*, std::allocator<audiovoice<AudioPlayArrayResmp>*> > >, audiovoice<AudioPlayArrayResmp>* const&)
0000ed94 g     F .text.itcm	000000cc ExFatFile::getName8(char*, unsigned int)
00002ee0  w    F .text.itcm	00000060 AudioMixer4::AudioMixer4()
00019b60  w    F .text.itcm	00000078 std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
000026cc  w    F .text.itcm	0000008c Encoder::isr28()
6002fc00 g     O .text.csf	00000c00 hab_csf
00014b68 g     F .text.itcm	00000140 TwoWire::requestFrom(unsigned char, unsigned char, unsigned char)
60001654 g     F .text.code	00000054 set_audioClock(int, long, unsigned long, bool)
000001d8  w    F .text.itcm	00000020 newdigate::ResamplingArrayReader::open(char*)
0000b534  w    F .text.itcm	0000000c DMAChannel::~DMAChannel()
20003314 g     O .data	00000010 Serial
0001fba8 g     F .text.itcm	000000c4 __cxa_demangle
200050f8 g     O .bss	00000004 AudioOutputI2S::block_left_2nd
00014834  w    F .text.itcm	00000018 TwoWire::peek()
000063e0 g     F .text.itcm	0000021c autoSave()
00020cc8 g     F .text.itcm	00000022 .hidden _Unwind_RaiseException
000256fc g     F .text.itcm	00000020 __sseek
0002689c g     F .text.itcm	00000028 fiprintf
200016b8  w    O .data	00000020 vtable for newdigate::ResamplingArrayReader
60002ffc g     O .text.progmem	00000050 TwoWire::i2c3_hardware
200042c0 g       .bss	00000000 _sbss
00024c5c g     F .text.itcm	00000076 _putc_r
2000c930 g     O .bss	00000002 AudioOutputI2S::block_right_offset
00015690  w    F .text.itcm	0000001c _write
000119f0 g     F .text.itcm	00000124 FatPartition::init(FsBlockDeviceInterface*, unsigned char)
00010d00 g     F .text.itcm	00000120 FatFormatter::initFatDir(unsigned char, unsigned long)
00015394 g     F .text.itcm	00000004 pendablesrvreq_isr
00015a5c g     F .text.itcm	0000007e String::append(char const*, unsigned int)
200052d0  w    O .bss	00000010 std::string::_Rep::_S_empty_rep_storage
000114b4 g     F .text.itcm	00000032 FatPartition::freeClusterCount_cb_fat32(unsigned long, unsigned char*, void*)
0000cca0 g     F .text.itcm	00000084 SDClass::dateTime(unsigned short*, unsigned short*)
0000cd78  w    F .text.itcm	00000064 SDClass::rename(char const*, char const*)
000140d4 g     F .text.itcm	0000004e FsCache::prepare(unsigned long, unsigned char)
2000530c g     O .bss	00000004 __atexit
00020c18 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXD
60001824 g     F .text.code	000000c8 AudioStream::initialize_memory(audio_block_struct*, unsigned int)
20003b28 g     O .data	00000004 lastPage
00013f84 g     F .text.itcm	0000004e SdSpiArduinoDriver::deactivate()
20003cf0 g     O .data	00000040 volume
2000b658 g     O .bss	00000010 oldButtonString
000166dc g     F .text.itcm	00000004 operator delete[](void*)
00019acc g     F .text.itcm	00000080 std::logic_error::logic_error(char const*)
20001728 g     O .data	00000014 vtable for std::bad_alloc
600030c0  w    O .text.progmem	00000018 usb_string_manufacturer_name
0000fe20 g     F .text.itcm	00000090 FatFile::rmdir()
2000b7e4 g     O .bss	00000014 patchCord5
2000b7f8 g     O .bss	00000014 patchCord6
00000bc4  w    F .text.itcm	000000bc CPixelLEDController<(EOrder)129, 8, 255ul>::showColor(CRGB const&, int, CRGB)
00018d54 g     F .text.itcm	0000002e __cxa_allocate_exception
00020d58 g     F .text.itcm	00000022 .hidden _Unwind_Backtrace
00021eb4 g     F .text.itcm	000002f4 __sfvwrite_r
00016e08 g     F .text.itcm	00000004 Panic_Temp_isr
00006a40  w    F .text.itcm	00000088 audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()
200050c4 g     O .bss	00000008 AudioInputI2S::dma
600017bc g     F .text.code	00000068 TwoWire::begin()
0000d3d0 g     F .text.itcm	0000009c ExFatFile::parsePathName(char const*, ExName_t*, char const**)
2000b820 g     O .bss	00000014 patchCord8
2000b80c g     O .bss	00000014 patchCord7
00015674 g     F .text.itcm	0000001c Print::println()
00012d4c g     F .text.itcm	00000068 SdioCard::sectorCount()
00011c70 g     F .text.itcm	00000072 FsBaseFile::openNext(FsBaseFile*, int)
2000b834 g     O .bss	00000014 patchCord9
00015968 g     F .text.itcm	00000026 String::String(char const*)
0000a68c g     F .text.itcm	000001e0 WS2812Serial::begin()
00011268 g     F .text.itcm	0000002a FatFile::getLfnChar(DirLfn_t*, unsigned char)
0000dc7c g     F .text.itcm	000000b4 ExFatFile::remove()
00020ca0 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_WMMXC
0000f49c g     F .text.itcm	00000034 FatFile::addCluster()
00014138 g     F .text.itcm	00000018 FsDateTime::setCallback(void (*)(unsigned short*, unsigned short*))
0000cc9c  w    F .text.itcm	00000002 SDClass::~SDClass()
000186c4 g     F .text.itcm	0000004c sm_align_pool
000146e4 g     F .text.itcm	00000006 Switch::setReleasedCallback(void (*)(void*), void*)
20003bbc g     O .data	00000014 sampleFile
2000b7d0 g     O .bss	00000014 patchCord4
2000c954 g     O .bss	00000001 noteOnTriggered
00011e08  w    F .text.itcm	00000004 DedicatedSpiCard::hasDedicatedSpi()
00026a3c g     F .text.itcm	00000f8c _vfiprintf_r
20003b6c g     O .data	00000014 myDestFile
2000b730 g     O .bss	00000014 patchCord3
0001853c g     F .text.itcm	00000094 usb_serial_flush_output
0002108c g     F .text.itcm	0000000a .hidden _Unwind_GetRegionStart
20003bd0 g     O .data	00000040 set_SamplePack
2000c548 g     O .bss	00000004 usb_midi_handleActiveSensing
0001295c  w    F .text.itcm	00000076 SharedSpiCard::readCID(CID*)
00021e98 g     F .text.itcm	0000001c vdprintf
0000e1b4 g     F .text.itcm	00000176 ExFatFile::timestamp(unsigned char, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
00001918  w    F .text.itcm	0000008c Encoder::isr5()
0000f4d0 g     F .text.itcm	00000078 FatFile::addDirCluster()
00021d48 g     F .text.itcm	00000064 fputc
20001258 g     O .data	00000008 typeinfo for std::type_info
000176e4 g     F .text.itcm	00000028 usb_transmit
600018f4  w    F .text.code	00000002 startup_late_hook
00020d34 g     F .text.itcm	00000022 .hidden ___Unwind_ForcedUnwind
00011ce4 g     F .text.itcm	00000004 operator new(unsigned int, unsigned long*)
20006bc8 g     O .bss	00000020 headphones
00014ca8 g     F .text.itcm	000000ac TwoWire::isr()
200013b8 g     O .data	00000070 vtable for DedicatedSpiCard
0000b560 g     F .text.itcm	00000084 AudioControlSGTL5000::read(unsigned int)
0000b7c4 g     F .text.itcm	00000030 AudioControlSGTL5000::enable()
00012e3c g     F .text.itcm	000000b4 SdioCard::writeData(unsigned char const*)
00011480 g     F .text.itcm	00000034 FatPartition::freeClusterCount_cb_fat16(unsigned long, unsigned char*, void*)
0001200c g     F .text.itcm	0000008c SharedSpiCard::readData(unsigned char*, unsigned int)
00025724 g     F .text.itcm	0000001a __ascii_wctomb
000002f4  w    F .text.itcm	00000028 SDFile::close()
000087d8 g     F .text.itcm	00000710 checkMode()
0000031c  w    F .text.itcm	0000000c Mode::~Mode()
0000d724 g     F .text.itcm	00000398 ExFatFile::openPrivate(ExFatFile*, ExName_t*, int)
2000c963 g     O .bss	00000001 usb_configuration
20004acc g     O .bss	00000050 SPI
000146f4 g     F .text.itcm	00000006 Switch::setDoubleClickCallback(void (*)(void*), void*)
000175ec g     F .text.itcm	00000064 usb_config_rx
00003150  w    F .text.itcm	00000014 Encoder::isr44()
200051e4 g     O .bss	00000004 Switch::_beepAllCallback
0000d3a8 g     F .text.itcm	00000028 ExFatFile::openRoot(ExFatVolume*)
00002870  w    F .text.itcm	0000008c Encoder::isr31()
2000c53c g     O .bss	00000008 usb_cdc_line_coding
00015990 g     F .text.itcm	0000002e String::String(int, unsigned char)
0000b7f4  w    F .text.itcm	0000005a AudioControlSGTL5000::inputSelect(int)
2000c953 g     O .bss	00000001 isPlaying
000166d8 g     F .text.itcm	00000004 operator delete(void*)
000030ec  w    F .text.itcm	00000014 Encoder::isr49()
00000b28  w    F .text.itcm	00000054 SDFile::setModifyTime(DateTimeFields const&)
000151a0 g     F .text.itcm	00000044 AudioStream::update_setup()
000210b2 g     F .text.itcm	00000006 .hidden _Unwind_GetTextRelBase
00018c58 g     F .text.itcm	0000001c std::bad_alloc::~bad_alloc()
00000848  w    F .text.itcm	0000004c SDFile::available()
200054a8 g     O .bss	00000001 __lock___sfp_recursive_mutex
2000b68c g     O .bss	00000004 paintMode
00011e04  w    F .text.itcm	00000004 SharedSpiCard::type() const
20003b80 g     O .data	00000014 myFile
20001578  w    O .data	00000024 vtable for Stream
0001402c g     F .text.itcm	0000004e SdSpiArduinoDriver::send(unsigned char const*, unsigned int)
00005c90 g     F .text.itcm	000001ec setVolume()
000195c8 g     F .text.itcm	00000014 std::terminate()
2000bb74 g     O .bss	0000001c sound4
000166d4 g     F .text.itcm	00000004 operator new[](unsigned int)
2000ba94 g     O .bss	0000001c sound0
2000bb58 g     O .bss	0000001c sound3
20005164 g     O .bss	00000008 AudioOutputI2S2::dma
20004b1c g     O .bss	00000050 SPI1
00011828 g     F .text.itcm	000001c8 FatPartition::freeClusterCount()
000155c0 g     F .text.itcm	00000050 Print::write(unsigned char const*, unsigned int)
20004b6c g     O .bss	00000050 SPI2
00014704 g     F .text.itcm	00000104 fastinterpolate(short, short, short, short, float)
00006670 g     F .text.itcm	00000060 handleStop()
0000c5f8 g     F .text.itcm	000000a4 BandLimitedWaveform::process_active_steps(unsigned long)
2000b994 g     O .bss	00000004 pulse
20006fd0 g     O .bss	00000038 mix2
0000b55c  w    F .text.itcm	00000004 AudioControlSGTL5000::inputLevel(float)
00016198 g     F .text.itcm	000000ec eepromemu_flash_write
0000f184 g     F .text.itcm	00000040 ExFatPartition::fatPut(unsigned long, unsigned long)
0002571c g     F .text.itcm	00000008 __sclose
00000768  w    F .text.itcm	0000006e SDFile::getModifyTime(DateTimeFields&)
00014814  w    F .text.itcm	0000001e TwoWire::read()
2000b6a4 g     O .bss	00000014 patchCord1
2000b690 g     O .bss	00000014 patchCord0
000101f4 g     F .text.itcm	00000074 FatFile::truncate()
20003290 g     O .data	00000004 PrevSampleRate
00019764 g     F .text.itcm	00000014 __cxxabiv1::__si_class_type_info::~__si_class_type_info()
2000b71c g     O .bss	00000014 patchCord2
200038e4 g     O .data	00000040 draw
00020cc8 g     F .text.itcm	00000022 .hidden ___Unwind_RaiseException
000005f8  w    F .text.itcm	00000034 StreamFile<FsBaseFile, unsigned long long>::write(unsigned char)
2000b924 g     O .bss	00000014 pc5
000183bc g     F .text.itcm	00000044 usb_serial_peekchar
00002038  w    F .text.itcm	00000090 Encoder::isr54()
2000b938 g     O .bss	00000014 pc6
0000059c  w    F .text.itcm	0000000c IntervalTimer::~IntervalTimer()
00014fd0 g     F .text.itcm	00000018 AudioConnection::AudioConnection()
2000b94c g     O .bss	00000014 pc7
0000c004 g     F .text.itcm	00000002 AudioOutputAnalog::begin()
0001fdac g     F .text.itcm	0000007c __cxa_begin_catch
0000e81c g     F .text.itcm	0000052c ExFatFormatter::format(FsBlockDeviceInterface*, unsigned char*, Print*)
00002528  w    F .text.itcm	0000008c Encoder::isr25()
20006f60 g     O .bss	00000038 mix1_c
20006f28 g     O .bss	00000038 mix1_b
0000f284 g     F .text.itcm	0000006a ExFatPartition::freeClusterCount()
2000333c g     O .data	0000016c __global_locale
0001565c g     F .text.itcm	00000016 Print::print(long)
2000bc00 g     O .bss	0000001c sound9
2000145c g     O .data	0000000c vtable for AudioSynthWaveform
00018c1c g     F .text.itcm	00000020 std::__throw_bad_function_call()
20006f98 g     O .bss	00000038 mix1_d
00021e34 g     F .text.itcm	00000018 fputs
0001fca8 g     F .text.itcm	0000001e __cxa_call_terminate
2000bb90 g     O .bss	0000001c sound5
0000cc8c g     F .text.itcm	00000010 BandLimitedWaveform::BandLimitedWaveform()
00022b48 g     F .text.itcm	00000002 __retarget_lock_acquire_recursive
00020bd0 g     F .text.itcm	00000018 .hidden restore_core_regs
00000a80  w    F .text.itcm	00000040 AudioPlayArrayResmp::~AudioPlayArrayResmp()
00017798  w    F .text.itcm	00000004 usb_serial_class::availableForWrite()
00013aa0 g     F .text.itcm	000000fc SdioCard::readData(unsigned char*)
00000b7c  w    F .text.itcm	00000048 SDFile::~SDFile()
2000bbac g     O .bss	0000001c sound6
20004bbc g     O .bss	00000140 Wire
600020f0 g       .text.code	00000000 __init_array_start
00018d84 g     F .text.itcm	00000020 __cxa_free_exception
2000c564 g     O .bss	00000004 usb_midi_handlePitchChange
00000f74  w    F .text.itcm	0000008e SDFile::seek(unsigned long long, int)
2000bbe4 g     O .bss	0000001c sound8
000210bc g     F .text.itcm	00000078 _calloc_r
2000bbc8 g     O .bss	0000001c sound7
00012764 g     F .text.itcm	00000068 SharedSpiCard::writeStart(unsigned long)
6000309d  w    O .text.progmem	00000001 _serialEventUSB1_default
000031a0  w    F .text.itcm	00000010 Encoder::isr0()
000117d0 g     F .text.itcm	00000056 FatPartition::freeChain(unsigned long)
2000ba0c g     O .bss	00000004 samplePackID
00018c00 g     F .text.itcm	0000001c std::bad_function_call::~bad_function_call()
00018be4 g     F .text.itcm	00000008 std::bad_function_call::what() const
2000bae8 g     O .bss	0000001c sound11
000085fc g     F .text.itcm	00000134 loadPack()
00020bd0 g     F .text.itcm	00000018 .hidden __restore_core_regs
00020dd4 g     F .text.itcm	0000028a .hidden __gnu_unwind_execute
200004b8 g     O .data	00000128 .hidden __powf_log2_data
000148b8  w    F .text.itcm	0000006c TwoWire::TwoWire(IMXRT_LPI2C_t*, TwoWire::I2C_Hardware_t const&)
200042c0 g     O .data	00000000 .hidden __TMC_END__
0000fa20 g     F .text.itcm	000001a8 FatFile::read(void*, unsigned int)
20001238 g     O .data	0000000c typeinfo for std::bad_function_call
00017a10 g     F .text.itcm	000000a8 usb_midi_read_message
20005124 g     O .bss	00000008 AudioOutputTDM::dma
000117b0 g     F .text.itcm	00000020 FatPartition::fatPut(unsigned long, unsigned long)
000204d0 g     F .text.itcm	00000010 .hidden __gnu_Unwind_ForcedUnwind
20005034 g     O .bss	00000004 AudioStream::memory_pool
2000151c  w    O .data	0000005c vtable for SDFile
00020cec g     F .text.itcm	00000022 .hidden ___Unwind_Resume
00024ed4 g     F .text.itcm	0000015c __multiply
00015b40 g     F .text.itcm	0000002c String::equals(char const*) const
00025030 g     F .text.itcm	000000c0 __pow5mult
20006ef0 g     O .bss	00000038 mix1_a
0000ce6c  w    F .text.itcm	00000036 SDClass::exists(char const*)
000181f0 g     F .text.itcm	000000ec usb_serial_configure
00013ff4 g     F .text.itcm	00000024 SdSpiArduinoDriver::receive(unsigned char*, unsigned int)
2000513c g     O .bss	00000004 EventResponder::firstInterrupt
00006b9c  w    F .text.itcm	000000a6 basesampler<AudioPlayArrayResmp, audiosample>::addVoice(AudioPlayArrayResmp&, AudioMixer4&, unsigned char, AudioEffectEnvelope&)
000184d4 g     F .text.itcm	00000018 usb_serial_write
00011f8c g     F .text.itcm	0000007e SharedSpiCard::isBusy()
00016284 g     F .text.itcm	000000b8 eepromemu_flash_erase_sector
00000005 g       *ABS*	00000000 _itcm_block_count
00001e90  w    F .text.itcm	0000008c Encoder::isr15()
000195e4 g     F .text.itcm	00000014 std::unexpected()
2000c550 g     O .bss	00000004 usb_midi_handleClock
0000be46 g     F .text.itcm	00000000 memcpy_tointerleaveL
000216e0 g     F .text.itcm	0000000c __malloc_lock
0000e720 g     F .text.itcm	0000004c ExFatFormatter::writeUpcaseUnicode(unsigned short)
20000280 g     O .data	00000148 .hidden __exp2f_data
0000e0dc g     F .text.itcm	000000d6 ExFatFile::mkdir(ExFatFile*, char const*, bool)
200024c4 g     O .data	00000370 digital_pin_to_info_PGM
0001633c g     F .text.itcm	00000134 eeprom_write_byte
00011dfc  w    F .text.itcm	00000004 SharedSpiCard::errorCode() const
00015fe4 g     F .text.itcm	00000024 digitalRead
200051a4 g     O .bss	00000008 AudioOutputI2SHex::dma
000005a8  w    F .text.itcm	00000050 SDFile::name()
0001ff00 g     F .text.itcm	000002c8 .hidden __udivmoddi4
2000c969 g     O .bss	00000001 usb_midi_msg_type
600035d8 g       *ABS*	00000000 _stextload
000226f0 g     F .text.itcm	0000000a fcvtf
00012b3c g     F .text.itcm	0000001c DedicatedSpiCard::writeSector(unsigned long, unsigned char const*)
00010e20 g     F .text.itcm	00000056 FatFormatter::initPbs()
2000bab0 g     O .bss	0000001c sound1
00001a30  w    F .text.itcm	0000008c Encoder::isr7()
200068a4 g     O .bss	00000038 envelope1
2000bb3c g     O .bss	0000001c sound2
2000519c g     O .bss	00000008 AudioInputI2SQuad::dma
000199b8 g     F .text.itcm	00000004 std::runtime_error::what() const
00021170 g     F .text.itcm	00000010 free
00013fd4 g     F .text.itcm	00000006 SdSpiArduinoDriver::end()
2000510c g     O .bss	00000008 AudioOutputMQS::dma
00003eb4 g     F .text.itcm	000000a0 unpaint()
00000128  w    F .text.itcm	00000002 Print::flush()
20006a64 g     O .bss	00000038 envelope4
000030c4  w    F .text.itcm	00000014 Encoder::isr51()
0000ad38 g     F .text.itcm	0000012c CFastLED::show(unsigned char)
2000686c g     O .bss	00000038 envelope0
00019a3c g     F .text.itcm	00000048 std::logic_error::~logic_error()
0000d34c g     F .text.itcm	00000014 ExFatFile::close()
00018f5c g     F .text.itcm	00000002 std::exception::~exception()
20006b0c g     O .bss	00000038 envelope7
000009cc  w    F .text.itcm	00000018 SDFile::peek()
00024e18 g     F .text.itcm	00000060 __lo0bits
000009e4  w    F .text.itcm	00000026 SDFile::isDirectory()
0000be86 g     F .text.itcm	00000000 memcpy_tointerleaveR
20006a2c g     O .bss	00000038 envelope3
00011dcc g     F .text.itcm	00000028 FsVolume::open(char const*, int)
200069f4 g     O .bss	00000038 envelope2
00012b58 g     F .text.itcm	00000026 DedicatedSpiCard::begin(SdSpiConfig)
000199b8 g     F .text.itcm	00000004 std::logic_error::what() const
60003354 g     O .text.progmem	00000275 usb_config_descriptor_480
00018c44 g     F .text.itcm	00000014 std::bad_alloc::~bad_alloc()
00002bcc  w    F .text.itcm	00000090 Encoder::isr37()
20006a9c g     O .bss	00000038 envelope5
200051b4 g     O .bss	00000008 AudioOutputPT8211::dma
0000dbb4 g     F .text.itcm	0000000e ExFatFile::open(ExFatVolume*, char const*, int)
2000b7bc g     O .bss	00000014 patchCord39
000159f0 g     F .text.itcm	00000038 String::String(float, unsigned char)
20004cfc g     O .bss	00000140 Wire1
00025644 g     F .text.itcm	00000054 _fflush_r
00011e80  w    F .text.itcm	00000002 DedicatedSpiCard::~DedicatedSpiCard()
000185d0  w    F .text.itcm	000000f0 yield
000196f4 g     F .text.itcm	0000006e __cxa_rethrow
2000b76c g     O .bss	00000014 patchCord34
000158f0 g     F .text.itcm	0000000e String::~String()
20004e3c g     O .bss	00000140 Wire2
00015848 g     F .text.itcm	0000006c random(unsigned long)
00022b50 g     F .text.itcm	00000000 memchr
20003288 g     O .data	00000004 F_BUS_ACTUAL
000204e0 g     F .text.itcm	00000044 .hidden __gnu_Unwind_Resume
200012a4 g     O .data	00000024 typeinfo name for __cxxabiv1::__foreign_exception
600030a0 g     O .text.progmem	0000001e usb_string_product_name_default
2000b7a8 g     O .bss	00000014 patchCord38
000129d4 g     F .text.itcm	00000066 SharedSpiCard::writeData(unsigned char, unsigned char const*)
000166e0 g     F .text.itcm	00000004 operator delete(void*, unsigned int)
00025698 g     F .text.itcm	00000022 __sread
00003164  w    F .text.itcm	00000014 Encoder::isr43()
600018f0 g     F .text.code	00000002 startup_default_middle_hook
00018798 g     F .text.itcm	00000320 powf
200042c0 g       .data	00000000 _edata
00016494 g     F .text.itcm	000000f8 attachInterrupt
00019a84 g     F .text.itcm	00000048 std::length_error::~length_error()
00020cb4 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Save_WMMXC
2000ba10 g     O .bss	00000004 scale_cpu_cycles_to_microseconds
00003bc0  w    F .text.itcm	00000158 std::_Function_handler<void (unsigned char, unsigned char, unsigned char, bool, bool), audiosampler<AudioPlayArrayResmp, PitchedArraySamplePlay>::audiosampler()::{lambda(unsigned char, unsigned char, unsigned char, bool, bool)#1}>::_M_invoke(std::_Any_data const&, unsigned char&&, unsigned char&&, unsigned char&&, bool&&, bool&&)
00022af8 g     F .text.itcm	00000048 __libc_init_array
2000c92a g     O .bss	00000002 AudioStream::cpu_cycles_total_max
0000f038 g     F .text.itcm	0000004c ExFatPartition::chainSize(unsigned long)
00016da8  w    F .text.itcm	00000034 _sbrk
200050fc g     O .bss	00000004 AudioOutputI2S::block_right_1st
000021e0  w    F .text.itcm	0000008c Encoder::isr19()
000144a8 g     F .text.itcm	00000188 Switch::process()
00000668  w    F .text.itcm	00000054 SDFile::setCreateTime(DateTimeFields const&)
00020548 g     F .text.itcm	0000002e .hidden _Unwind_VRS_Get
0000e32c g     F .text.itcm	000000e4 ExFatFile::truncate()
000031b0  w    F .text.itcm	00000574 Encoder::attach_interrupt(unsigned char, Encoder_internal_state_t*)
00013f44 g     F .text.itcm	00000004 sdCsWrite(unsigned char, bool)
0002586c g     F .text.itcm	0000002c _lseek_r
0000bec6 g     F .text.itcm	00000000 memcpy_tointerleaveQuad
0000f874 g     F .text.itcm	00000104 FatFile::open(FatFile*, char const*, int)
20005184 g     O .bss	00000008 AudioInputI2SOct::dma
0000cddc  w    F .text.itcm	00000054 SDClass::remove(char const*)
00020cec g     F .text.itcm	00000022 .hidden _Unwind_Resume
0001243c g     F .text.itcm	00000076 SharedSpiCard::readOCR(unsigned long*)
00000d28 g     F .text.itcm	0000002c handleSongPosition(unsigned int)
00002410  w    F .text.itcm	0000008c Encoder::isr23()
00017ab8 g     F .text.itcm	000003d8 usb_midi_read
000159c0 g     F .text.itcm	0000002e String::String(unsigned int, unsigned char)
2000b8d4 g     O .bss	00000014 pc14
0000c2c0 g     F .text.itcm	000000dc AudioOutputI2S::begin()
00016ff0 g     F .text.itcm	000005fc usb_isr
2000c57c g     O .bss	00000004 usb_midi_handleStop
00011e8c  w    F .text.itcm	0000000e DedicatedSpiCard::~DedicatedSpiCard()
200012f0 g     O .data	00000010 typeinfo name for std::logic_error
00018f6c g     F .text.itcm	0000000e std::bad_exception::~bad_exception()
0001484c  w    F .text.itcm	00000002 TwoWire::flush()
2000b8ac g     O .bss	00000014 pc12
2000b8c0 g     O .bss	00000014 pc13
20002974 g     O .data	00000204 step_table
2000b780 g     O .bss	00000014 patchCord35
0000c884 g     F .text.itcm	00000408 AudioSynthWaveform::update()
00019880 g     F .text.itcm	0000002c std::type_info::operator==(std::type_info const&) const
00018710 g     F .text.itcm	00000084 sm_set_pool
2000b794 g     O .bss	00000014 patchCord37
000195f8 g     F .text.itcm	00000010 std::get_terminate()
00019bdc g     F .text.itcm	00000034 __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
60001624 g     F .text.code	00000030 ResetHandler
00019b4c g     F .text.itcm	00000014 std::length_error::length_error(char const*)
0000cfd0 g     F .text.itcm	000000dc SDClass::format(int, char, Print&)
00019c1c g     F .text.itcm	00000014 __cxxabiv1::__class_type_info::~__class_type_info()
00001d78  w    F .text.itcm	0000008c Encoder::isr13()
6002b580 g       *ABS*	00000000 _sdataload
00018488 g     F .text.itcm	00000020 usb_serial_getchar
00000200  w    F .text.itcm	000000e4 CPixelLEDController<(EOrder)129, 8, 255ul>::show(CRGB const*, int, CRGB)
00016470 g     F .text.itcm	0000001e eeprom_write_block
20005140 g     O .bss	00000004 EventResponder::lastYield
00003994  w    F .text.itcm	00000228 PitchedArraySamplePlay::play(unsigned char, audiovoice<AudioPlayArrayResmp>*, audiosample*)
200051ac g     O .bss	00000008 AudioOutputI2SOct::dma
00021b88 g     F .text.itcm	00000040 sprintf
0000f5dc g     F .text.itcm	00000020 FatFile::getCreateDateTime(unsigned short*, unsigned short*)
00011b98 g     F .text.itcm	00000028 FsBaseFile::close()
0000b5e4 g     F .text.itcm	0000005c AudioControlSGTL5000::write(unsigned int, unsigned int)
00018dcc g     F .text.itcm	00000000 __cxa_end_cleanup
000007d8  w    F .text.itcm	0000006e SDFile::getCreateTime(DateTimeFields&)
00000a6c  w    F .text.itcm	00000014 SDFile::flush()
000127cc g     F .text.itcm	00000118 SharedSpiCard::erase(unsigned long, unsigned long)
00019878 g     F .text.itcm	00000002 std::type_info::~type_info()
000057c8 g     F .text.itcm	000001b4 drawSamples()
00010818 g     F .text.itcm	00000298 FatFile::open(FatFile*, FatLfn_t*, int)
0001516c g     F .text.itcm	00000034 AudioConnection::~AudioConnection()
000104d8 g     F .text.itcm	00000122 FatFile::createLFN(unsigned short, FatLfn_t*, unsigned char)
0001659c g     F .text.itcm	00000134 memcpy
0000dbe8 g     F .text.itcm	00000092 ExFatFile::addCluster()
00017788  w    F .text.itcm	00000004 usb_serial_class::peek()
0001984c g     F .text.itcm	0000002a __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00019664 g     F .text.itcm	00000058 __cxa_init_primary_exception
000027e4  w    F .text.itcm	0000008c Encoder::isr30()
20005030 g     O .bss	00000004 FsDateTime::callback2
00019608 g     F .text.itcm	00000010 std::get_unexpected()
00002384  w    F .text.itcm	0000008c Encoder::isr22()
2000c55c g     O .bss	00000004 usb_midi_handleNoteOff
00015900 g     F .text.itcm	00000066 String::copy(char const*, unsigned int)
00016748 g     F .text.itcm	0000034c dtostrf
200038c8 g     O .data	00000004 currentMode
00014018 g     F .text.itcm	00000012 SdSpiArduinoDriver::send(unsigned char)
2000b848 g     O .bss	00000014 patchCordw1
00000134  w    F .text.itcm	0000000c File::write(unsigned char const*, unsigned int)
0000eecc g     F .text.itcm	000000c0 ExFatPartition::bitmapFind(unsigned long, unsigned long)
000216ec g     F .text.itcm	0000000c __malloc_unlock
00002aac  w    F .text.itcm	00000090 Encoder::isr35()
00019bd8  w    F .text.itcm	00000004 std::string::_Rep::_M_destroy(std::allocator<char> const&)
00019c90 g     F .text.itcm	0000001a __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
000205dc g     F .text.itcm	00000084 .hidden __gnu_Unwind_Backtrace
00000708  w    F .text.itcm	00000018 StreamFile<FsBaseFile, unsigned long long>::peek()
00013c70 g     F .text.itcm	00000098 SdioCard::stopTransmission(bool)
00002758  w    F .text.itcm	0000008c Encoder::isr29()
000135b0 g     F .text.itcm	00000088 SdioCard::readSectors(unsigned long, unsigned char*, unsigned int)
00022c00 g     F .text.itcm	000000dc strlen
00008ee8 g     F .text.itcm	000001ec loop
60002040 g     F .text.code	00000054 analog_init
0001419c g     F .text.itcm	000000a0 lbaToMbrChs(unsigned char*, unsigned long, unsigned long)
000001c8  w    F .text.itcm	00000002 newdigate::ResamplingArrayReader::~ResamplingArrayReader()
2000b668 g     O .bss	00000010 oldButtons
000198ac g     F .text.itcm	0000010c __gnu_cxx::__verbose_terminate_handler()
0000b8bc  w    F .text.itcm	00000088 AudioControlSGTL5000::volume(float)
00024dd8 g     F .text.itcm	00000040 __hi0bits
2000c794 g     O .bss	00000190 waveform1
2000c558 g     O .bss	00000004 usb_midi_handleControlChange
000159c0 g     F .text.itcm	0000002e String::String(unsigned int, unsigned char)
00027b5c g     F .text.itcm	00000106 _wcsnrtombs_l
00000130  w    F .text.itcm	00000004 CLEDController::getMaxRefreshRate() const
00020be8 g     F .text.itcm	00000000 .hidden __gnu_Unwind_Restore_VFP
600018f4 g     F .text.code	00000002 startup_default_late_hook
00001170  w    F .text.itcm	0000002c File::~File()
2000503c g     O .bss	00000070 AudioStream::memory_pool_available_mask
0000559c g     F .text.itcm	0000022c drawBase()
00015adc g     F .text.itcm	00000010 operator+(StringSumHelper const&, String const&)
2000c965 g     O .bss	00000001 usb_midi_msg_cable
000151e4 g     F .text.itcm	000000b4 DMAChannel::begin(bool)
000159f0 g     F .text.itcm	00000038 String::String(float, unsigned char)
00000168  w    F .text.itcm	0000002c File::read()
0000012c  w    F .text.itcm	00000004 CLEDController::size()
0000bf00 g     F .text.itcm	000000f0 AudioMixer4::update()
00013638 g     F .text.itcm	00000088 SdioCard::writeSectors(unsigned long, unsigned char const*, unsigned int)
00000194  w    F .text.itcm	0000001e File::write(unsigned char)
0000af8c g     F .text.itcm	0000003c CFastLED::clear(bool)
00014f70 g     F .text.itcm	00000018 AudioStream::receiveReadOnly(unsigned int)
00015aec g     F .text.itcm	0000001c operator+(StringSumHelper const&, char const*)
00012d1c  w    F .text.itcm	00000002 SdioCard::~SdioCard()
00002640  w    F .text.itcm	0000008c Encoder::isr27()
00002e78  w    F .text.itcm	00000068 AudioEffectEnvelope::AudioEffectEnvelope()
200013a0  w    O .data	0000000c vtable for AudioStream
0001465c g     F .text.itcm	00000080 Switch::Switch(unsigned char, unsigned char, bool, unsigned long, unsigned long, unsigned long, unsigned long)
000045c8 g     F .text.itcm	00000120 displaySample(int)
00011e10 g     F .text.itcm	0000006e DedicatedSpiCard::writeSectorsCallback(unsigned long, unsigned int, unsigned char const* (*)(unsigned long, void*), void*)
20006914 g     O .bss	00000038 envelope11
2000694c g     O .bss	00000038 envelope12
20006bb8 g     O .bss	00000010 extmem_smalloc_pool
00013f48 g     F .text.itcm	00000012 SdSpiArduinoDriver::activate()
20058000 g       .text.csf	00000000 _estack
00018418 g     F .text.itcm	00000070 usb_serial_flush_input
00025848 g     F .text.itcm	00000024 _isatty_r
200069bc g     O .bss	00000038 envelope14
000142e0 g     F .text.itcm	00000098 FsUtf::mbToCp(char const*, char const*, unsigned long*)
00011f00 g     F .text.itcm	0000008c SharedSpiCard::writeStop()
20006984 g     O .bss	00000038 envelope13
0001987c g     F .text.itcm	00000004 std::type_info::__is_pointer_p() const
00014d60 g     F .text.itcm	0000000c lpi2c3_isr()
00018f60 g     F .text.itcm	00000002 std::bad_exception::~bad_exception()
0000091c  w    F .text.itcm	000000b0 SDFile::openNextFile(unsigned char)
0000dabc g     F .text.itcm	000000f8 ExFatFile::open(ExFatFile*, char const*, int)
2000c92e g     O .bss	00000002 AudioOutputI2S::block_left_offset


